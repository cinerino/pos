{"version":3,"sources":["app/modules/setting/components/pages/setting/setting.component.html","app/modules/setting/components/pages/setting/setting.component.scss","app/modules/setting/components/pages/setting/setting.component.ts","app/modules/setting/setting-routing.module.ts","app/modules/setting/setting.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\n    <form *ngIf=\\\"settingForm\\\" [formGroup]=\\\"settingForm\\\">\\n        <div class=\\\"mb-4\\\">\\n            <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'setting.title' | translate }}</h2>\\n            <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'setting.read' | translate\\\"></p>\\n            <div class=\\\"p-3 bg-white\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'common.theater' | translate }}</p>\\n                        <div class=\\\"col-md-8\\\">\\n                            <select class=\\\"form-control\\\" formControlName=\\\"sellerBranchCode\\\" (change)=\\\"changePosList()\\\">\\n                                <option value=\\\"\\\">{{ 'setting.unselected' | translate }}</option>\\n                                <option *ngFor=\\\"let theater of (master | async).sellers\\\"\\n                                    [value]=\\\"theater.location.branchCode\\\">{{\\n                                    theater.name.ja }}</option>\\n                            </select>\\n                            <div *ngIf=\\\"settingForm.controls.sellerBranchCode.invalid && settingForm.controls.sellerBranchCode.touched\\\"\\n                                class=\\\"mt-2\\\">\\n                                <p *ngIf=\\\"settingForm.controls.sellerBranchCode.errors.required\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.unselected' | translate }}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'setting.pos' | translate }}</p>\\n                        <div class=\\\"col-md-8\\\">\\n                            <select class=\\\"form-control\\\" formControlName=\\\"posId\\\">\\n                                <option value=\\\"\\\">{{ 'setting.unselected' | translate }}</option>\\n                                <option *ngFor=\\\"let pos of posList\\\" [value]=\\\"pos.id\\\">{{ pos.name }}</option>\\n                            </select>\\n                            <div *ngIf=\\\"settingForm.controls.posId.invalid && settingForm.controls.posId.touched\\\"\\n                                class=\\\"mt-2\\\">\\n                                <p *ngIf=\\\"settingForm.controls.posId.errors.required\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.unselected' | translate }}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'common.familyName' | translate }}</p>\\n                        <div class=\\\"col-md-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"familyName\\\" placeholder=\\\"モーション\\\">\\n                            <div *ngIf=\\\"settingForm.controls.familyName.invalid && settingForm.controls.familyName.touched\\\"\\n                                class=\\\"mt-2\\\">\\n                                <p *ngIf=\\\"settingForm.controls.familyName.errors.required\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.required' | translate }}</p>\\n                                <p *ngIf=\\\"settingForm.controls.familyName.errors.maxlength\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.maxlength' | translate: { value: settingForm.controls.familyName.errors.maxlength.requiredLength } }}\\n                                </p>\\n                                <p *ngIf=\\\"settingForm.controls.familyName.errors.pattern\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.fullKana' | translate }}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'common.givenName' | translate }}</p>\\n                        <div class=\\\"col-md-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"givenName\\\" placeholder=\\\"ピクチャー\\\">\\n                            <div *ngIf=\\\"settingForm.controls.givenName.invalid && settingForm.controls.givenName.touched\\\"\\n                                class=\\\"mt-2\\\">\\n                                <p *ngIf=\\\"settingForm.controls.givenName.errors.required\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.required' | translate }}</p>\\n                                <p *ngIf=\\\"settingForm.controls.givenName.errors.maxlength\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.maxlength' | translate: { value: settingForm.controls.givenName.errors.maxlength.requiredLength } }}\\n                                </p>\\n                                <p *ngIf=\\\"settingForm.controls.givenName.errors.pattern\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.fullKana' | translate }}\\n                                </p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'common.email' | translate }}</p>\\n                        <div class=\\\"col-md-8\\\">\\n                            <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"\\n                                placeholder=\\\"motionpicture@example.jp\\\">\\n                            <div *ngIf=\\\"settingForm.controls.email.invalid && settingForm.controls.email.touched\\\"\\n                                class=\\\"mt-2\\\">\\n                                <p *ngIf=\\\"settingForm.controls.email.errors.required\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.required' | translate }}</p>\\n                                <p *ngIf=\\\"settingForm.controls.email.errors.maxlength\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.maxlength' | translate: { value: settingForm.controls.email.errors.maxlength.requiredLength } }}\\n                                </p>\\n                                <p *ngIf=\\\"settingForm.controls.email.errors.email\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.email' | translate }}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'common.telephone' | translate }}</p>\\n                        <div class=\\\"col-md-8\\\">\\n                            <input type=\\\"tel\\\" class=\\\"form-control\\\" formControlName=\\\"telephone\\\" placeholder=\\\"0362778824\\\">\\n                            <div *ngIf=\\\"settingForm.controls.telephone.invalid && settingForm.controls.telephone.touched\\\"\\n                                class=\\\"mt-2\\\">\\n                                <p *ngIf=\\\"settingForm.controls.telephone.errors.required\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.required' | translate }}</p>\\n                                <p *ngIf=\\\"settingForm.controls.telephone.errors.minlength\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.minlength' | translate: { value: settingForm.controls.telephone.errors.minlength.requiredLength } }}\\n                                </p>\\n                                <p *ngIf=\\\"settingForm.controls.telephone.errors.maxlength\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.minlength' | translate: { value: settingForm.controls.telephone.errors.maxlength.requiredLength } }}\\n                                </p>\\n                                <p *ngIf=\\\"settingForm.controls.telephone.errors.telephone\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.telephone' | translate }}</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'setting.printer' | translate }}</p>\\n                        <div class=\\\"col-md-8\\\">\\n                            <select class=\\\"form-control\\\" formControlName=\\\"printerType\\\" (change)=\\\"changePrinterType()\\\">\\n                                <option value=\\\"\\\">{{ 'setting.unselected' | translate }}</option>\\n                                <option *ngFor=\\\"let printer of printers\\\" [value]=\\\"printer.connectionType\\\">\\n                                    {{ printer.name | translate }}</option>\\n                            </select>\\n                            <button\\n                                *ngIf=\\\"this.settingForm.controls.printerType.value && this.settingForm.controls.printerType.value !== connectionType.None\\\"\\n                                type=\\\"button\\\" class=\\\"btn btn-sm btn-primary py-2 mt-2\\\"\\n                                (click)=\\\"print()\\\">{{ 'setting.testPrinting' | translate }}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row align-items-center\\\">\\n                        <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'setting.printerIpAddress' | translate }}</p>\\n                        <div class=\\\"col-md-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"printerIpAddress\\\"\\n                                placeholder=\\\"0.0.0.0\\\">\\n                            <div *ngIf=\\\"settingForm.controls.printerIpAddress.invalid && settingForm.controls.printerIpAddress.touched\\\"\\n                                class=\\\"mt-2\\\">\\n                                <p *ngIf=\\\"settingForm.controls.printerIpAddress.errors.required\\\" class=\\\"text-danger\\\">\\n                                    {{ 'form.validation.required' | translate }}</p>\\n                            </div>\\n                            <p class=\\\"text-small mt-2\\\">\\n                                {{ 'setting.printerIpAddressDescription' | translate }}\\n                            </p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"environment.SETTING_DEVELOP_OPTION\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"row align-items-center\\\">\\n                            <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'setting.isPurchaseCart' | translate }}</p>\\n                            <div class=\\\"col-md-8\\\">\\n                                <select type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"isPurchaseCart\\\"\\n                                    id=\\\"isPurchaseCart\\\" placeholder=\\\"\\\">\\n                                    <option value=\\\"0\\\">{{ 'common.off' | translate }}</option>\\n                                    <option value=\\\"1\\\">{{ 'common.on' | translate }}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <div class=\\\"row align-items-center\\\">\\n                            <p class=\\\"col-md-4 py-2 text-md-right\\\">{{ 'setting.viewType' | translate }}</p>\\n                            <div class=\\\"col-md-8\\\">\\n                                <select class=\\\"form-control\\\" id=\\\"viewType\\\" formControlName=\\\"viewType\\\">\\n                                    <option [value]=\\\"viewType.Cinema\\\">{{ viewType.Cinema }}</option>\\n                                    <option [value]=\\\"viewType.Event\\\">{{ viewType.Event }}</option>\\n                                </select>\\n                                <div *ngIf=\\\"settingForm.controls.viewType.invalid && settingForm.controls.viewType.touched\\\"\\n                                    class=\\\"mt-2\\\">\\n                                    <p *ngIf=\\\"settingForm.controls.viewType.errors.required\\\" class=\\\"text-danger\\\">\\n                                        {{ 'form.validation.required' | translate }}</p>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n        <div class=\\\"buttons mx-auto text-center\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"isLoading | async\\\" class=\\\"btn btn-primary btn-block py-3 mb-3\\\"\\n                (click)=\\\"onSubmit()\\\">{{ 'setting.next' | translate }}</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-link\\\"\\n                [routerLink]=\\\"environment.BASE_URL\\\">{{ 'setting.prev' | translate }}</button>\\n        </div>\\n    </form>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL3NldHRpbmcvY29tcG9uZW50cy9wYWdlcy9zZXR0aW5nL3NldHRpbmcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as libphonenumber from 'libphonenumber-js';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../../../../environments/environment';\nimport { connectionType, printers, ViewType } from '../../../../../models';\nimport { MasterService, OrderService, UserService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\nimport { LibphonenumberFormatPipe } from '../../../../shared/pipes/libphonenumber-format.pipe';\n\n@Component({\n    selector: 'app-setting',\n    templateUrl: './setting.component.html',\n    styleUrls: ['./setting.component.scss']\n})\nexport class SettingComponent implements OnInit {\n    public settingForm: FormGroup;\n    public user: Observable<reducers.IUserState>;\n    public master: Observable<reducers.IMasterState>;\n    public error: Observable<string | null>;\n    public isLoading: Observable<boolean>;\n    public posList: { id: string; name: string; typeOf: string; }[];\n    public printers: typeof printers = printers;\n    public connectionType: typeof connectionType = connectionType;\n    public viewType: typeof ViewType = ViewType;\n    public environment = environment;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store<reducers.IState>,\n        private utilService: UtilService,\n        private userService: UserService,\n        private masterService: MasterService,\n        private orderService: OrderService,\n        private translate: TranslateService,\n        private router: Router\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public async ngOnInit() {\n        this.user = this.store.pipe(select(reducers.getUser));\n        this.master = this.store.pipe(select(reducers.getMaster));\n        this.error = this.store.pipe(select(reducers.getError));\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.posList = [];\n        try {\n            await this.masterService.getSellers();\n            await this.createSettlingForm();\n        } catch (error) {\n            console.error(error);\n            this.router.navigate(['/error']);\n        }\n    }\n\n    /**\n     * フォーム作成\n     */\n    private async createSettlingForm() {\n        const NAME_MAX_LENGTH = 12;\n        const MAIL_MAX_LENGTH = 50;\n        const TEL_MAX_LENGTH = 15;\n        const TEL_MIN_LENGTH = 9;\n\n        this.settingForm = this.formBuilder.group({\n            sellerBranchCode: ['', [\n                Validators.required\n            ]],\n            posId: ['', [\n                Validators.required\n            ]],\n            familyName: ['', [\n                Validators.required,\n                Validators.maxLength(NAME_MAX_LENGTH),\n                Validators.pattern(/^[ァ-ヶー]+$/)\n            ]],\n            givenName: ['', [\n                Validators.required,\n                Validators.maxLength(NAME_MAX_LENGTH),\n                Validators.pattern(/^[ァ-ヶー]+$/)\n            ]],\n            email: ['', [\n                Validators.required,\n                Validators.maxLength(MAIL_MAX_LENGTH),\n                Validators.email\n            ]],\n            telephone: ['', [\n                Validators.required,\n                Validators.maxLength(TEL_MAX_LENGTH),\n                Validators.minLength(TEL_MIN_LENGTH),\n                (control: AbstractControl): ValidationErrors | null => {\n                    const field = control.root.get('telephone');\n                    if (field !== null) {\n                        if (field.value === '') {\n                            return null;\n                        }\n                        const parsedNumber = (new RegExp(/^\\+/).test(field.value))\n                            ? libphonenumber.parse(field.value)\n                            : libphonenumber.parse(field.value, 'JP');\n                        if (parsedNumber.phone === undefined) {\n                            return { telephone: true };\n                        }\n                        const isValid = libphonenumber.isValidNumber(parsedNumber);\n                        if (!isValid) {\n                            return { telephone: true };\n                        }\n                    }\n\n                    return null;\n                }\n            ]],\n            printerType: [''],\n            printerIpAddress: [''],\n            isPurchaseCart: ['0', [\n                Validators.required,\n                Validators.pattern(/^[0-9]+$/)\n            ]],\n            viewType: ['', [\n                Validators.required\n            ]]\n        });\n        const user = await this.userService.getData();\n        if (user.seller !== undefined\n            && user.seller.location !== undefined) {\n            this.settingForm.controls.sellerBranchCode.setValue(user.seller.location.branchCode);\n        }\n        if (user.pos !== undefined) {\n            this.changePosList();\n            this.settingForm.controls.posId.setValue(user.pos.id);\n        }\n        if (user.customerContact !== undefined\n            && user.customerContact.familyName !== undefined\n            && user.customerContact.givenName !== undefined\n            && user.customerContact.email !== undefined\n            && user.customerContact.telephone !== undefined) {\n            this.settingForm.controls.familyName.setValue(user.customerContact.familyName);\n            this.settingForm.controls.givenName.setValue(user.customerContact.givenName);\n            this.settingForm.controls.email.setValue(user.customerContact.email);\n            this.settingForm.controls.telephone.setValue(new LibphonenumberFormatPipe().transform(user.customerContact.telephone));\n        }\n        if (user.printer !== undefined) {\n            this.settingForm.controls.printerType.setValue(user.printer.connectionType);\n            this.settingForm.controls.printerIpAddress.setValue(user.printer.ipAddress);\n        }\n        this.settingForm.controls.isPurchaseCart.setValue((user.isPurchaseCart) ? '1' : '0');\n        this.settingForm.controls.viewType.setValue(user.viewType);\n    }\n\n    /**\n     * POS変更\n     */\n    public changePosList() {\n        this.settingForm.controls.posId.setValue('');\n        const sellerBranchCode = this.settingForm.controls.sellerBranchCode.value;\n        if (sellerBranchCode === '') {\n            this.posList = [];\n            return;\n        }\n        this.master.subscribe((master) => {\n            const findTheater =\n                master.sellers.find(theater =>\n                    (theater.location !== undefined && theater.location.branchCode === sellerBranchCode)\n                );\n            if (findTheater === undefined) {\n                this.posList = [];\n                return;\n            }\n            this.posList = (findTheater.hasPOS === undefined) ? [] : findTheater.hasPOS;\n        }).unsubscribe();\n    }\n\n\n    /**\n     * 設定変更\n     */\n    public onSubmit() {\n        Object.keys(this.settingForm.controls).forEach((key) => {\n            this.settingForm.controls[key].markAsTouched();\n        });\n        if (this.settingForm.invalid) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('setting.alert.validation')\n            });\n            return;\n        }\n        this.master.subscribe((master) => {\n            const findSeller = master.sellers.find((s) =>\n                (s.location !== undefined && s.location.branchCode === this.settingForm.controls.sellerBranchCode.value));\n            if (findSeller === undefined || findSeller.hasPOS === undefined) {\n                return;\n            }\n            const findPos = findSeller.hasPOS.find((pos: any) => {\n                return pos.id === this.settingForm.controls.posId.value;\n            });\n            if (findPos === undefined) {\n                return;\n            }\n            this.userService.updateAll({\n                seller: findSeller,\n                pos: findPos,\n                customerContact: {\n                    familyName: this.settingForm.controls.familyName.value,\n                    givenName: this.settingForm.controls.givenName.value,\n                    email: this.settingForm.controls.email.value,\n                    telephone: this.settingForm.controls.telephone.value\n                },\n                printer: {\n                    ipAddress: this.settingForm.controls.printerIpAddress.value,\n                    connectionType: this.settingForm.controls.printerType.value\n                },\n                isPurchaseCart: (this.settingForm.controls.isPurchaseCart.value === '1') ? true : false,\n                viewType: this.settingForm.controls.viewType.value\n            });\n            this.utilService.openAlert({\n                title: this.translate.instant('common.complete'),\n                body: this.translate.instant('setting.alert.success')\n            });\n\n        }).unsubscribe();\n\n    }\n\n    /**\n     * 印刷\n     */\n    public async print() {\n        const printer = {\n            connectionType: this.settingForm.controls.printerType.value,\n            ipAddress: this.settingForm.controls.printerIpAddress.value\n        };\n        try {\n            await this.orderService.print({ orders: [], printer });\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: `\n                <p class=\"mb-4\">${this.translate.instant('setting.alert.print')}</p>\n                    <div class=\"p-3 bg-light-gray select-text\">\n                    <code>${error}</code>\n                </div>`\n            });\n        }\n    }\n\n    /**\n     * プリンター変更\n     */\n    public changePrinterType() {\n        if (this.settingForm.controls.printerType.value === connectionType.StarBluetooth) {\n            this.settingForm.controls.printerIpAddress.setValue(this.translate.instant('setting.starBluetoothAddress'));\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\nimport { SettingComponent } from './components/pages/setting/setting.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: BaseComponent,\n  children: [\n    { path: '', component: SettingComponent }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { SettingComponent } from './components/pages/setting/setting.component';\nimport { SettingRoutingModule } from './setting-routing.module';\n\n\n@NgModule({\n  declarations: [\n    SettingComponent\n  ],\n  imports: [\n    CommonModule,\n    SettingRoutingModule,\n    SharedModule,\n  ]\n})\nexport class SettingModule { }\n"],"sourceRoot":"webpack:///"}