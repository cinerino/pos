{"version":3,"sources":["app/canActivates/auth-guard.service.ts","app/canActivates/setting-guard.service.ts"],"names":[],"mappings":";;ykEAAA;;GAUA,GAAa,CAAA,gBAAb,yBAEI,0BACY,MADZ,CAEY,QAFZ,CAEqC,CADzB,KAAA,MAAA,CAAA,MAAA,CACA,KAAA,QAAA,CAAA,QACP,CAEL;;;;OAPJ,6CAYiB,WAZjB,CAYiB,sBAAW,C,2OAEhB,MAAM,MAAK,QAAL,CAAc,WAAd,EAAN,C,uCAEO,I,0DAEP,OAAO,CAAC,GAAR,CAAY,aAAZ,cACA,KAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,GAAD,CAArB,E,gCAEO,K,uEAEd,CAvBL,2BAAA,C,wDAGwB,4CAAA,CAAA,QAAA,C,QACE,uDAAA,CAAA,iBAAA,C,IAJb,gBAAgB,CAAA,UAAA,CAAA,CAH5B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,CACR,UAAU,CAAE,MADJ,CAAX,CAG4B,C,gCAGL,4CAAA,CAAA,QAAA,C,CACE,uDAAA,CAAA,iBAAA,C,EAJG,CAAA,CAAhB,gBAAgB,CAAhB,C;;;;wtECVb;;GAYA,GAAa,CAAA,mBAAb,yBAEI,6BACY,MADZ,CAEY,KAFZ,CAEyC,CAD7B,KAAA,MAAA,CAAA,MAAA,CACA,KAAA,KAAA,CAAA,KACP,CAEL;;;;OAPJ,kDAYiB,WAZjB,CAYiB,sBAAW,C,0OAEhB,KAAK,IAAL,CAAY,KAAK,KAAL,CAAW,IAAX,CAAgB,MAAA,CAAA,wCAAA,CAAA,QAAA,CAAA,CAAA,CAAO,4CAAA,CAAA,SAAA,CAAP,CAAhB,CAAZ,C,iBACa,MAAM,MAAK,OAAL,EAAN,C,OAAP,I,qBACF,IAAI,CAAC,MAAL,GAAgB,S,+BACV,IAAI,CAAA,KAAJ,CAAU,0BAAV,C,yCAGH,I,+DAEP,OAAO,CAAC,GAAR,CAAY,aAAZ,eACA,KAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,UAAD,CAArB,E,iCAEO,K,0EAEd,CA3BL,SA6BkB,OA7BlB,CA6BkB,kBAAO,C,gQACV,GAAI,CAAA,OAAJ,CAAiC,SAAC,OAAD,CAAY,CAChD,KAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,SAAC,IAAD,CAAS,CACzB,OAAO,CAAC,IAAD,CACV,CAFD,EAEG,WAFH,EAGH,CAJM,C,2DAKV,CAnCL,8BAAA,C,2DAGwB,4CAAA,CAAA,QAAA,C,QACD,wCAAA,CAAA,OAAA,C,IAJV,mBAAmB,CAAA,UAAA,CAAA,CAH/B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,CACR,UAAU,CAAE,MADJ,CAAX,CAG+B,C,gCAGR,4CAAA,CAAA,QAAA,C,CACD,wCAAA,CAAA,OAAA,C,EAJS,CAAA,CAAnB,mBAAmB,CAAnB,C","sourcesContent":["/**\n * AuthGuardService\n */\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { CinerinoService } from '../services/cinerino.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n    constructor(\n        private router: Router,\n        private cinerino: CinerinoService\n    ) { }\n\n    /**\n     * 認証\n     * @method canActivate\n     * @returns {Promise<boolean>}\n     */\n    public async canActivate(): Promise<boolean> {\n        try {\n            await this.cinerino.getServices();\n\n            return true;\n        } catch (error) {\n            console.log('canActivate', error);\n            this.router.navigate(['/']);\n\n            return false;\n        }\n    }\n}\n","/**\n * SettingGuardService\n */\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport * as reducers from '../store/reducers';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingGuardService implements CanActivate {\n    public user: Observable<reducers.IUserState>;\n    constructor(\n        private router: Router,\n        private store: Store<reducers.IState>\n    ) { }\n\n    /**\n     * 認証\n     * @method canActivate\n     * @returns {Promise<boolean>}\n     */\n    public async canActivate(): Promise<boolean> {\n        try {\n            this.user = this.store.pipe(select(reducers.getUser));\n            const user = await this.getUser();\n            if (user.seller === undefined) {\n                throw new Error('user.seller is undefined');\n            }\n\n            return true;\n        } catch (error) {\n            console.log('canActivate', error);\n            this.router.navigate(['/setting']);\n\n            return false;\n        }\n    }\n\n    private async getUser() {\n        return new Promise<reducers.IUserState>((resolve) => {\n            this.user.subscribe((user) => {\n                resolve(user);\n            }).unsubscribe();\n        });\n    }\n}\n"],"sourceRoot":"webpack:///"}