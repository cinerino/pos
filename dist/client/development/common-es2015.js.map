{"version":3,"sources":["./app/canActivates/auth-guard.service.ts","./app/canActivates/index.ts","./app/canActivates/setting-guard.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;GAEG;AACwC;AACW;AACS;AAK/D,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAEzB,YACY,MAAc,EACd,QAAyB;QADzB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAiB;IACjC,CAAC;IAEL;;;;OAIG;IACU,WAAW;;YACpB,IAAI;gBACA,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;gBAElC,OAAO,IAAI,CAAC;aACf;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAE5B,OAAO,KAAK,CAAC;aAChB;QACL,CAAC;KAAA;CACJ;;YArBuB,sDAAM;YACJ,0EAAe;;AAJ5B,gBAAgB;IAH5B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;qCAIsB,sDAAM;QACJ,0EAAe;GAJ5B,gBAAgB,CAwB5B;AAxB4B;;;;;;;;;;;;;;;;;;;;ACVQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArC;;GAEG;AACwC;AACW;AACV;AAEE;AAK9C,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAE5B,YACY,MAAc,EACd,KAA6B;QAD7B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAwB;IACrC,CAAC;IAEL;;;;OAIG;IACU,WAAW;;YACpB,IAAI;gBACA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,uDAAgB,CAAC,CAAC,CAAC;gBACtD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;gBAClC,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;oBAC3B,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;iBAC/C;gBAED,OAAO,IAAI,CAAC;aACf;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBAEnC,OAAO,KAAK,CAAC;aAChB;QACL,CAAC;KAAA;IAEa,OAAO;;YACjB,OAAO,IAAI,OAAO,CAAsB,CAAC,OAAO,EAAE,EAAE;gBAChD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBACzB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;CACJ;;YAjCuB,sDAAM;YACP,iDAAK;;AAJf,mBAAmB;IAH/B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;qCAIsB,sDAAM;QACP,iDAAK;GAJf,mBAAmB,CAoC/B;AApC+B","file":"common-es2015.js","sourcesContent":["/**\n * AuthGuardService\n */\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { CinerinoService } from '../services/cinerino.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n    constructor(\n        private router: Router,\n        private cinerino: CinerinoService\n    ) { }\n\n    /**\n     * 認証\n     * @method canActivate\n     * @returns {Promise<boolean>}\n     */\n    public async canActivate(): Promise<boolean> {\n        try {\n            await this.cinerino.getServices();\n\n            return true;\n        } catch (error) {\n            console.log('canActivate', error);\n            this.router.navigate(['/']);\n\n            return false;\n        }\n    }\n}\n","export * from './auth-guard.service';\n","/**\n * SettingGuardService\n */\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport * as reducers from '../store/reducers';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingGuardService implements CanActivate {\n    public user: Observable<reducers.IUserState>;\n    constructor(\n        private router: Router,\n        private store: Store<reducers.IState>\n    ) { }\n\n    /**\n     * 認証\n     * @method canActivate\n     * @returns {Promise<boolean>}\n     */\n    public async canActivate(): Promise<boolean> {\n        try {\n            this.user = this.store.pipe(select(reducers.getUser));\n            const user = await this.getUser();\n            if (user.seller === undefined) {\n                throw new Error('user.seller is undefined');\n            }\n\n            return true;\n        } catch (error) {\n            console.log('canActivate', error);\n            this.router.navigate(['/setting']);\n\n            return false;\n        }\n    }\n\n    private async getUser() {\n        return new Promise<reducers.IUserState>((resolve) => {\n            this.user.subscribe((user) => {\n                resolve(user);\n            }).unsubscribe();\n        });\n    }\n}\n"],"sourceRoot":"webpack:///"}