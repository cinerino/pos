{"version":3,"sources":["./app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.html","./app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.html","./app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.html","./app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.scss","./app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.ts","./app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.scss","./app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.ts","./app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.scss","./app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.ts","./app/modules/inquiry/inquiry-routing.module.ts","./app/modules/inquiry/inquiry.module.ts"],"names":[],"mappings":"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","file":"modules-inquiry-inquiry-module-es2015.js","sourcesContent":["export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\n    <div class=\\\"mb-4\\\">\\n        <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.confirm.title' | translate }}</h2>\\n\\n        <div class=\\\"mb-4 px-3 py-2 bg-white\\\">\\n            <div class=\\\"row align-items-center\\\">\\n                <p class=\\\"col-4\\\">\\n                    {{ 'common.confirmationNumber' | translate }}</p>\\n                <p class=\\\"col-8 text-large text-info font-weight-bold text-md-left text-right\\\">\\n                    {{ (order | async).order.confirmationNumber }}\\n                </p>\\n            </div>\\n        </div>\\n        <div *ngFor=\\\"let eventOrder of eventOrders\\\" class=\\\"mb-4 bg-white p-3\\\">\\n            <div class=\\\"mb-3\\\">\\n                <div class=\\\"mb-1\\\">\\n                    <p class=\\\"font-weight-bold text-large\\\">{{ eventOrder.event.name | changeLanguage }}</p>\\n                    <p class=\\\"text-small\\\"\\n                        *ngIf=\\\"eventOrder.event.superEvent.headline && (eventOrder.event.superEvent.headline | changeLanguage)\\\">\\n                        {{ eventOrder.event.superEvent.headline | changeLanguage }}</p>\\n                    <p class=\\\"text-small\\\"\\n                        *ngIf=\\\"eventOrder.event.superEvent.description && (eventOrder.event.superEvent.description | changeLanguage)\\\">{{\\n                        eventOrder.event.superEvent.description | changeLanguage }}</p>\\n                </div>\\n                <p class=\\\"mb-1\\\">\\n                    {{ eventOrder.event.startDate | formatDate: 'MM/DD(ddd) HH:mm' }}-{{ eventOrder.event.endDate | formatDate: 'HH:mm' }}\\n                </p>\\n                <p class=\\\"text-small mb-1\\\">\\n                    <span class=\\\"theatre-name\\\">{{ eventOrder.event.superEvent.location.name | changeLanguage }}</span>\\n                    <span class=\\\"screen-name\\\">&nbsp;/&nbsp;{{ eventOrder.event.location.name | changeLanguage }}</span>\\n                    <span\\n                        *ngIf=\\\"eventOrder.event.workPerformed?.duration && moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() > 0\\\">\\n                        &nbsp;/&nbsp;<span class=\\\"mr-1\\\">{{ 'common.duration' | translate }}</span>{{ moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() }}{{ 'common.date.minute' | translate }}\\n                    </span>\\n                </p>\\n            </div>\\n            <hr class=\\\"mb-3\\\">\\n            <div *ngIf=\\\"environment.DISPLAY_TICKETED_SEAT\\\">\\n                <div *ngFor=\\\"let acceptedOffer of eventOrder.data\\\">\\n                    <p>\\n                        <span *ngIf=\\\"acceptedOffer.itemOffered.reservedTicket.ticketedSeat\\\">\\n                            {{ acceptedOffer.itemOffered.reservedTicket.ticketedSeat.seatNumber }}&nbsp;/&nbsp;</span>{{ acceptedOffer.itemOffered.reservedTicket.ticketType.name | changeLanguage }}&nbsp;/&nbsp;{{\\n                            getTicketPrice(acceptedOffer).single | currency : 'JPY' }}\\n                    </p>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"!environment.DISPLAY_TICKETED_SEAT\\\">\\n                <div *ngFor=\\\"let ticket of changeTicketCountByOrder(eventOrder.data)\\\">\\n                    <p>\\n                        {{ ticket.acceptedOffer.itemOffered.reservedTicket.ticketType.name | changeLanguage }}&nbsp;/&nbsp;{{\\n                            getTicketPrice(ticket.acceptedOffer).single | currency : 'JPY' }}&nbsp;×&nbsp;{{ ticket.count }}\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"mb-4 px-3 bg-white\\\">\\n            <div class=\\\"py-3 border-bottom border-gray\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.customerName' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.familyName }}\\n                        {{ (order | async).order.customer.givenName }}</p>\\n                </div>\\n            </div>\\n            <div class=\\\"py-3 border-bottom border-gray\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.email' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.email }}</p>\\n                </div>\\n            </div>\\n            <div class=\\\"py-3\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.telephone' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.telephone | libphonenumberFormat }}</p>\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"py-3\\\" *ngIf=\\\"(order | async).order.price > 0\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.paymentMethod' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">クレジットカード</p>\\n                </div>\\n            </div> -->\\n        </div>\\n    </div>\\n\\n    <div class=\\\"buttons mx-auto text-center\\\">\\n        <button *ngIf=\\\"environment.INQUIRY_PRINT\\\"\\n            [disabled]=\\\"(order | async).order.orderStatus !== orderStatus.OrderDelivered\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-primary btn-block py-3 mb-3\\\" (click)=\\\"print()\\\"\\n            [disabled]=\\\"isLoading | async\\\">{{ 'inquiry.confirm.next' | translate }}</button>\\n        <button *ngIf=\\\"environment.INQUIRY_CANCEL\\\"\\n            [disabled]=\\\"(order | async).order.orderStatus === orderStatus.OrderReturned\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-danger btn-block py-3 mb-3\\\"\\n            (click)=\\\"cancelConfirm()\\\">{{ 'inquiry.confirm.cancel' | translate }}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-link\\\"\\n            routerLink=\\\"/inquiry/input\\\">{{ 'inquiry.confirm.prev' | translate }}</button>\\n    </div>\\n\\n</div>\"","export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\n    <form [formGroup]=\\\"inquiryForm\\\">\\n        <div class=\\\"mb-4\\\">\\n            <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.input.title' | translate }}</h2>\\n            <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'inquiry.input.read' | translate\\\"></p>\\n\\n            <div class=\\\"inquiry-form mx-auto p-3 bg-white\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"mb-2\\\" for=\\\"\\\">{{ 'common.confirmationNumber' | translate }}</label>\\n                    <app-numeric-keypad *ngIf=\\\"environment.INQUIRY_INPUT_KEYPAD\\\" inputType=\\\"number\\\"\\n                        [inputValue]=\\\"inquiryForm.controls.confirmationNumber.value\\\"\\n                        (change)=\\\"changeConfirmationNumber($event)\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"confirmationNumber\\\"\\n                            id=\\\"confirmationNumber\\\" [placeholder]=\\\"'form.placeholder.confirmationNumber' | translate\\\"\\n                            readonly>\\n                    </app-numeric-keypad>\\n                    <input *ngIf=\\\"!environment.INQUIRY_INPUT_KEYPAD\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                        formControlName=\\\"confirmationNumber\\\" id=\\\"confirmationNumber\\\"\\n                        [placeholder]=\\\"'form.placeholder.confirmationNumber' | translate\\\">\\n                    <div *ngIf=\\\"inquiryForm.controls.confirmationNumber.invalid && inquiryForm.controls.confirmationNumber.touched\\\"\\n                        class=\\\"mt-2\\\">\\n                        <p *ngIf=\\\"inquiryForm.controls.confirmationNumber.errors.required\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.required' | translate }}</p>\\n                        <p *ngIf=\\\"inquiryForm.controls.confirmationNumber.errors.pattern\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.number' | translate }}</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group mb-0\\\">\\n                    <label class=\\\"mb-2\\\" for=\\\"\\\">{{ 'common.telephone' | translate }}</label>\\n                    <app-numeric-keypad *ngIf=\\\"environment.INQUIRY_INPUT_KEYPAD\\\" inputType=\\\"telephone\\\"\\n                        [inputValue]=\\\"inquiryForm.controls.telephone.value\\\" (change)=\\\"changeTelephone($event)\\\">\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"telephone\\\" id=\\\"telephone\\\"\\n                            [placeholder]=\\\"'form.placeholder.telephone' | translate\\\" readonly>\\n                    </app-numeric-keypad>\\n                    <input *ngIf=\\\"!environment.INQUIRY_INPUT_KEYPAD\\\" type=\\\"password\\\" class=\\\"form-control\\\"\\n                        formControlName=\\\"telephone\\\" id=\\\"telephone\\\"\\n                        [placeholder]=\\\"'form.placeholder.telephone' | translate\\\">\\n                    <div *ngIf=\\\"inquiryForm.controls.telephone.invalid && inquiryForm.controls.telephone.touched\\\"\\n                        class=\\\"mt-2\\\">\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.required\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.required' | translate }}</p>\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.minlength\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.minlength' | translate: { value: inquiryForm.controls.telephone.errors.minlength.requiredLength } }}\\n                        </p>\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.maxlength\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.maxlength' | translate: { value: inquiryForm.controls.telephone.errors.maxlength.requiredLength } }}\\n                        </p>\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.telephone\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.telephone' | translate }}</p>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n        <div class=\\\"buttons mx-auto text-center\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"isLoading | async\\\" class=\\\"btn btn-primary btn-block py-3 mb-3\\\"\\n                (click)=\\\"onSubmit()\\\">{{ 'inquiry.input.next' | translate }}</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-link\\\"\\n                routerLink=\\\"/purchase/root\\\">{{ 'inquiry.input.prev' | translate }}</button>\\n        </div>\\n    </form>\\n</div>\"","export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\n    <div class=\\\"mb-4\\\">\\n        <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.print.title' | translate }}</h2>\\n        <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'inquiry.print.read' | translate\\\"></p>\\n    </div>\\n\\n    <div class=\\\"buttons mx-auto text-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block py-3\\\" routerLink=\\\"/inquiry/input\\\">\\n            {{ 'inquiry.print.prev' | translate }}\\n        </button>\\n    </div>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL2lucXVpcnkvY29tcG9uZW50cy9wYWdlcy9pbnF1aXJ5LWNvbmZpcm0vaW5xdWlyeS1jb25maXJtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { factory } from '@cinerino/api-javascript-client';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { changeTicketCountByOrder, getTicketPrice, IEventOrder, order2EventOrders } from '../../../../../functions';\nimport { OrderService, ReservationService, UserService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-confirm',\n    templateUrl: './inquiry-confirm.component.html',\n    styleUrls: ['./inquiry-confirm.component.scss']\n})\nexport class InquiryConfirmComponent implements OnInit {\n    public order: Observable<reducers.IOrderState>;\n    public user: Observable<reducers.IUserState>;\n    public reservation: Observable<reducers.IReservationState>;\n    public isLoading: Observable<boolean>;\n    public error: Observable<string | null>;\n    public moment: typeof moment = moment;\n    public getTicketPrice = getTicketPrice;\n    public changeTicketCountByOrder = changeTicketCountByOrder;\n    public eventOrders: IEventOrder[];\n    public orderStatus: typeof factory.orderStatus = factory.orderStatus;\n    public environment = getEnvironment();\n    private timer: any;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private router: Router,\n        private userService: UserService,\n        private utilService: UtilService,\n        private orderService: OrderService,\n        private reservationService: ReservationService,\n        private translate: TranslateService\n    ) { }\n\n    public ngOnInit() {\n        this.eventOrders = [];\n        this.order = this.store.pipe(select(reducers.getOrder));\n        this.user = this.store.pipe(select(reducers.getUser));\n        this.reservation = this.store.pipe(select(reducers.getReservation));\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.error = this.store.pipe(select(reducers.getError));\n        this.order.subscribe((value) => {\n            if (value.order === undefined) {\n                this.router.navigate(['/error']);\n                return;\n            }\n            const order = value.order;\n            this.eventOrders = order2EventOrders({ order });\n        }).unsubscribe();\n        if (this.environment.INQUIRY_PRINT_WAIT_TIME !== '') {\n            const time = Number(this.environment.INQUIRY_PRINT_WAIT_TIME);\n            this.timer = setTimeout(() => {\n                this.router.navigate(['/inquiry/input']);\n            }, time);\n        }\n    }\n\n    /**\n     * キャンセル確認\n     */\n    public cancelConfirm() {\n        this.utilService.openConfirm({\n            title: this.translate.instant('common.confirm'),\n            body: this.translate.instant('inquiry.confirm.confirm.cancel'),\n            cb: async () => {\n                try {\n                    const userData = await this.userService.getData();\n                    const orderData = await this.orderService.getData();\n                    const order = orderData.order;\n                    if (order === undefined) {\n                        this.utilService.openAlert({\n                            title: this.translate.instant('common.error'),\n                            body: `\n                            <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.cancel')}</p>\n                                <div class=\"p-3 bg-light-gray select-text\">\n                                <code>order undefined</code>\n                            </div>`\n                        });\n                        return;\n                    }\n                    await this.orderService.cancel({ orders: [order], language: userData.language });\n                    await this.orderService.inquiry({\n                        confirmationNumber: order.confirmationNumber,\n                        customer: { telephone: order.customer.telephone }\n                    });\n                } catch (error) {\n                    console.error(error);\n                    this.utilService.openAlert({\n                        title: this.translate.instant('common.error'),\n                        body: `\n                        <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.cancel')}</p>\n                            <div class=\"p-3 bg-light-gray select-text\">\n                            <code>${JSON.stringify(error)}</code>\n                        </div>`\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     * 印刷\n     */\n    public async print() {\n        const today = moment().format('YYYYMMDD');\n        const limit = moment(today)\n            .add(this.environment.INQUIRY_PRINT_EXPIRED_VALUE, this.environment.INQUIRY_PRINT_EXPIRED_UNIT)\n            .format('YYYYMMDD');\n        const findResult = this.eventOrders.find(o => moment(o.event.startDate).format('YYYYMMDD') < limit);\n        if (findResult !== undefined) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.confirm.alert.printExpired')\n            });\n            return;\n        }\n        if (this.timer !== undefined) {\n            clearTimeout(this.timer);\n        }\n        try {\n            const orderData = await this.orderService.getData();\n            const user = await this.userService.getData();\n            if (orderData.order === undefined\n                || user.pos === undefined\n                || user.printer === undefined) {\n                this.router.navigate(['/error']);\n                return;\n            }\n            // 二重発券防止\n            const reservationNumbers = orderData.order.acceptedOffers.map((offers) => {\n                if (offers.itemOffered.typeOf !== factory.chevre.reservationType.EventReservation) {\n                    return '';\n                }\n                return offers.itemOffered.reservationNumber;\n            });\n            await this.reservationService.search({\n                typeOf: factory.chevre.reservationType.EventReservation,\n                reservationNumbers\n            });\n            const reservationData = await this.reservationService.getData();\n            const checkedInResult = reservationData.reservations.filter(r => r.checkedIn);\n            if (checkedInResult.length > 0) {\n                this.utilService.openAlert({\n                    title: this.translate.instant('common.error'),\n                    body: this.translate.instant('inquiry.confirm.alert.doubleTicketing')\n                });\n                return;\n            }\n            // 印刷\n            const orders = [orderData.order];\n            const pos = user.pos;\n            const printer = user.printer;\n            await this.orderService.print({ orders, pos, printer });\n            this.router.navigate(['/inquiry/print']);\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: `\n                <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.print')}</p>\n                    <div class=\"p-3 bg-light-gray select-text\">\n                    <code>${error}</code>\n                </div>`\n            });\n        }\n    }\n\n}\n","export default \".inquiry-form {\\n  max-width: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jbGllbnQvYXBwL21vZHVsZXMvaW5xdWlyeS9jb21wb25lbnRzL3BhZ2VzL2lucXVpcnktaW5wdXQvQzpcXFVzZXJzXFxoYXRhZ3VjaGlcXERlc2t0b3BcXHdvcmtzcGFjZVxcQ2luZXJpbm9cXHBvcy9zcmNcXGNsaWVudFxcYXBwXFxtb2R1bGVzXFxpbnF1aXJ5XFxjb21wb25lbnRzXFxwYWdlc1xcaW5xdWlyeS1pbnB1dFxcaW5xdWlyeS1pbnB1dC5jb21wb25lbnQuc2NzcyIsInNyYy9jbGllbnQvYXBwL21vZHVsZXMvaW5xdWlyeS9jb21wb25lbnRzL3BhZ2VzL2lucXVpcnktaW5wdXQvaW5xdWlyeS1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2NsaWVudC9hcHAvbW9kdWxlcy9pbnF1aXJ5L2NvbXBvbmVudHMvcGFnZXMvaW5xdWlyeS1pbnB1dC9pbnF1aXJ5LWlucHV0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlucXVpcnktZm9ybSAge1xuICAgIG1heC13aWR0aDogNTAwcHg7XG59IiwiLmlucXVpcnktZm9ybSB7XG4gIG1heC13aWR0aDogNTAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as libphonenumber from 'libphonenumber-js';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { OrderService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-input',\n    templateUrl: './inquiry-input.component.html',\n    styleUrls: ['./inquiry-input.component.scss']\n})\nexport class InquiryInputComponent implements OnInit {\n    public inquiryForm: FormGroup;\n    public environment = getEnvironment();\n    public isLoading: Observable<boolean>;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private formBuilder: FormBuilder,\n        private utilService: UtilService,\n        private orderService: OrderService,\n        private router: Router,\n        private translate: TranslateService\n    ) { }\n\n    public ngOnInit() {\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.createInquiryForm();\n    }\n\n    /**\n     * 照会フォーム作成\n     */\n    private createInquiryForm() {\n        const TEL_MAX_LENGTH = 15;\n        const TEL_MIN_LENGTH = 9;\n        this.inquiryForm = this.formBuilder.group({\n            confirmationNumber: ['', [\n                Validators.required,\n                Validators.pattern(/^[0-9]+$/)\n            ]],\n            telephone: ['', [\n                Validators.required,\n                Validators.maxLength(TEL_MAX_LENGTH),\n                Validators.minLength(TEL_MIN_LENGTH),\n                (control: AbstractControl): ValidationErrors | null => {\n                    const field = control.root.get('telephone');\n                    if (field !== null) {\n                        if (field.value === '') {\n                            return null;\n                        }\n                        const parsedNumber = (new RegExp(/^\\+/).test(field.value))\n                            ? libphonenumber.parse(field.value)\n                            : libphonenumber.parse(field.value, 'JP');\n                        if (parsedNumber.phone === undefined) {\n                            return { telephone: true };\n                        }\n                        const isValid = libphonenumber.isValidNumber(parsedNumber);\n                        if (!isValid) {\n                            return { telephone: true };\n                        }\n                    }\n\n                    return null;\n                }\n            ]]\n        });\n    }\n\n    /**\n     * 照会\n     */\n    public async onSubmit() {\n        Object.keys(this.inquiryForm.controls).forEach((key) => {\n            this.inquiryForm.controls[key].markAsTouched();\n        });\n        this.inquiryForm.controls.confirmationNumber.setValue((<HTMLInputElement>document.getElementById('confirmationNumber')).value);\n        this.inquiryForm.controls.telephone.setValue((<HTMLInputElement>document.getElementById('telephone')).value);\n        if (this.inquiryForm.invalid) {\n            return;\n        }\n        try {\n            const confirmationNumber = this.inquiryForm.controls.confirmationNumber.value;\n            const telephone = this.inquiryForm.controls.telephone.value;\n            await this.orderService.inquiry({\n                confirmationNumber,\n                customer: { telephone }\n            });\n            this.router.navigate(['/inquiry/confirm']);\n        } catch (error) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.input.validation')\n            });\n        }\n    }\n\n    /**\n     * 確認番号変更\n     */\n    public changeConfirmationNumber(value: string) {\n        this.inquiryForm.controls.confirmationNumber.setValue(value);\n    }\n\n    /**\n     * 電話番号変更\n     */\n    public changeTelephone(value: string) {\n        this.inquiryForm.controls.telephone.setValue(value);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL2lucXVpcnkvY29tcG9uZW50cy9wYWdlcy9pbnF1aXJ5LXByaW50L2lucXVpcnktcHJpbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { getEnvironment } from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-inquiry-print',\n    templateUrl: './inquiry-print.component.html',\n    styleUrls: ['./inquiry-print.component.scss']\n})\nexport class InquiryPrintComponent implements OnInit, OnDestroy {\n    public environment = getEnvironment();\n    private timer: any;\n\n    constructor(\n        private router: Router\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public ngOnInit() {\n        if (this.environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME === '') {\n            return;\n        }\n        const time = Number(this.environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME);\n        this.timer = setTimeout(() => {\n            this.router.navigate(['/inquiry/input']);\n        }, time);\n    }\n\n    /**\n     * 破棄\n     */\n    public ngOnDestroy() {\n        if (this.timer === undefined) {\n            return;\n        }\n        clearTimeout(this.timer);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardService } from '../../canActivates';\nimport { SettingGuardService } from '../../canActivates/setting-guard.service';\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: BaseComponent,\n  canActivate: [AuthGuardService, SettingGuardService],\n  children: [\n    { path: 'input', component: InquiryInputComponent },\n    { path: 'confirm', component: InquiryConfirmComponent },\n    { path: 'print', component: InquiryPrintComponent }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InquiryRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\nimport { InquiryRoutingModule } from './inquiry-routing.module';\n\n\n@NgModule({\n  declarations: [\n    InquiryInputComponent,\n    InquiryConfirmComponent,\n    InquiryPrintComponent,\n  ],\n  imports: [\n    CommonModule,\n    InquiryRoutingModule,\n    SharedModule,\n  ]\n})\nexport class InquiryModule { }\n"],"sourceRoot":"webpack:///"}