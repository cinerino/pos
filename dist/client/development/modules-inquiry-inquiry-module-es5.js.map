{"version":3,"sources":["app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.html","app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.html","app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.html","app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.scss","app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.ts","app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.scss","app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.ts","app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.scss","app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.ts","app/modules/inquiry/inquiry-routing.module.ts","app/modules/inquiry/inquiry.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\n    <div class=\\\"mb-4\\\">\\n        <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.confirm.title' | translate }}</h2>\\n\\n        <div class=\\\"mb-4 px-3 py-2 bg-white\\\">\\n            <div class=\\\"row align-items-center\\\">\\n                <p class=\\\"col-4\\\">\\n                    {{ 'common.confirmationNumber' | translate }}</p>\\n                <p class=\\\"col-8 text-large text-info font-weight-bold text-md-left text-right\\\">\\n                    {{ (order | async).order.confirmationNumber }}\\n                </p>\\n            </div>\\n        </div>\\n        <div *ngFor=\\\"let eventOrder of eventOrders\\\" class=\\\"mb-4 bg-white p-3\\\">\\n            <div class=\\\"mb-3\\\">\\n                <div class=\\\"mb-1\\\">\\n                    <p class=\\\"font-weight-bold text-large\\\">{{ eventOrder.event.name | changeLanguage }}</p>\\n                    <p class=\\\"text-small\\\"\\n                        *ngIf=\\\"eventOrder.event.superEvent.headline && (eventOrder.event.superEvent.headline | changeLanguage)\\\">\\n                        {{ eventOrder.event.superEvent.headline | changeLanguage }}</p>\\n                    <p class=\\\"text-small\\\"\\n                        *ngIf=\\\"eventOrder.event.superEvent.description && (eventOrder.event.superEvent.description | changeLanguage)\\\">{{\\n                        eventOrder.event.superEvent.description | changeLanguage }}</p>\\n                </div>\\n                <p class=\\\"mb-1\\\">\\n                    {{ eventOrder.event.startDate | formatDate: 'MM/DD(ddd) HH:mm' }}-{{ eventOrder.event.endDate | formatDate: 'HH:mm' }}\\n                </p>\\n                <p class=\\\"text-small mb-1\\\">\\n                    <span class=\\\"theatre-name\\\">{{ eventOrder.event.superEvent.location.name | changeLanguage }}</span>\\n                    <span class=\\\"screen-name\\\">&nbsp;/&nbsp;{{ eventOrder.event.location.name | changeLanguage }}</span>\\n                    <span\\n                        *ngIf=\\\"eventOrder.event.workPerformed?.duration && moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() > 0\\\">\\n                        &nbsp;/&nbsp;<span class=\\\"mr-1\\\">{{ 'common.duration' | translate }}</span>{{ moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() }}{{ 'common.date.minute' | translate }}\\n                    </span>\\n                </p>\\n            </div>\\n            <hr class=\\\"mb-3\\\">\\n            <div *ngIf=\\\"environment.DISPLAY_TICKETED_SEAT\\\">\\n                <div *ngFor=\\\"let acceptedOffer of eventOrder.data\\\">\\n                    <p>\\n                        <span *ngIf=\\\"acceptedOffer.itemOffered.reservedTicket.ticketedSeat\\\">\\n                            {{ acceptedOffer.itemOffered.reservedTicket.ticketedSeat.seatNumber }}&nbsp;/&nbsp;</span>{{ acceptedOffer.itemOffered.reservedTicket.ticketType.name | changeLanguage }}&nbsp;/&nbsp;{{\\n                            getTicketPrice(acceptedOffer).single | currency : 'JPY' }}\\n                    </p>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"!environment.DISPLAY_TICKETED_SEAT\\\">\\n                <div *ngFor=\\\"let ticket of changeTicketCountByOrder(eventOrder.data)\\\">\\n                    <p>\\n                        {{ ticket.acceptedOffer.itemOffered.reservedTicket.ticketType.name | changeLanguage }}&nbsp;/&nbsp;{{\\n                            getTicketPrice(ticket.acceptedOffer).single | currency : 'JPY' }}&nbsp;×&nbsp;{{ ticket.count }}\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"mb-4 px-3 bg-white\\\">\\n            <div class=\\\"py-3 border-bottom border-gray\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.customerName' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.familyName }}\\n                        {{ (order | async).order.customer.givenName }}</p>\\n                </div>\\n            </div>\\n            <div class=\\\"py-3 border-bottom border-gray\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.email' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.email }}</p>\\n                </div>\\n            </div>\\n            <div class=\\\"py-3\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.telephone' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.telephone | libphonenumberFormat }}</p>\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"py-3\\\" *ngIf=\\\"(order | async).order.price > 0\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.paymentMethod' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">クレジットカード</p>\\n                </div>\\n            </div> -->\\n        </div>\\n    </div>\\n\\n    <div class=\\\"buttons mx-auto text-center\\\">\\n        <button *ngIf=\\\"environment.INQUIRY_PRINT\\\"\\n            [disabled]=\\\"(order | async).order.orderStatus !== orderStatus.OrderDelivered\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-primary btn-block py-3 mb-3\\\" (click)=\\\"print()\\\"\\n            [disabled]=\\\"isLoading | async\\\">{{ 'inquiry.confirm.next' | translate }}</button>\\n        <button *ngIf=\\\"environment.INQUIRY_CANCEL\\\"\\n            [disabled]=\\\"(order | async).order.orderStatus === orderStatus.OrderReturned\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-danger btn-block py-3 mb-3\\\"\\n            (click)=\\\"cancelConfirm()\\\">{{ 'inquiry.confirm.cancel' | translate }}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-link\\\"\\n            routerLink=\\\"/inquiry/input\\\">{{ 'inquiry.confirm.prev' | translate }}</button>\\n    </div>\\n\\n</div>\"","export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\n    <div class=\\\"mb-4\\\">\\n        <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.input.title' | translate }}</h2>\\n        <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'inquiry.input.read' | translate\\\"></p>\\n\\n        <div class=\\\"inquiry-form mx-auto p-3 bg-white\\\">\\n            <form [formGroup]=\\\"inquiryForm\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"mb-2\\\" for=\\\"\\\">{{ 'common.confirmationNumber' | translate }}</label>\\n                    <app-numeric-keypad *ngIf=\\\"environment.INQUIRY_INPUT_KEYPAD\\\" inputType=\\\"number\\\" [inputValue]=\\\"inquiryForm.controls.confirmationNumber.value\\\"\\n                        (change)=\\\"changeConfirmationNumber($event)\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"confirmationNumber\\\"\\n                            id=\\\"confirmationNumber\\\" [placeholder]=\\\"'form.placeholder.confirmationNumber' | translate\\\"\\n                            readonly>\\n                    </app-numeric-keypad>\\n                    <input *ngIf=\\\"!environment.INQUIRY_INPUT_KEYPAD\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"confirmationNumber\\\" id=\\\"confirmationNumber\\\"\\n                        [placeholder]=\\\"'form.placeholder.confirmationNumber' | translate\\\">\\n                    <div *ngIf=\\\"inquiryForm.controls.confirmationNumber.invalid && inquiryForm.controls.confirmationNumber.touched\\\"\\n                        class=\\\"mt-2\\\">\\n                        <p *ngIf=\\\"inquiryForm.controls.confirmationNumber.errors.required\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.required' | translate }}</p>\\n                        <p *ngIf=\\\"inquiryForm.controls.confirmationNumber.errors.pattern\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.number' | translate }}</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group mb-0\\\">\\n                    <label class=\\\"mb-2\\\" for=\\\"\\\">{{ 'common.telephone' | translate }}</label>\\n                    <app-numeric-keypad *ngIf=\\\"environment.INQUIRY_INPUT_KEYPAD\\\" inputType=\\\"telephone\\\" [inputValue]=\\\"inquiryForm.controls.telephone.value\\\"\\n                        (change)=\\\"changeTelephone($event)\\\">\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"telephone\\\" id=\\\"telephone\\\"\\n                            [placeholder]=\\\"'form.placeholder.telephone' | translate\\\" readonly>\\n                    </app-numeric-keypad>\\n                    <input *ngIf=\\\"!environment.INQUIRY_INPUT_KEYPAD\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"telephone\\\" id=\\\"telephone\\\"\\n                        [placeholder]=\\\"'form.placeholder.telephone' | translate\\\">\\n                    <div *ngIf=\\\"inquiryForm.controls.telephone.invalid && inquiryForm.controls.telephone.touched\\\"\\n                        class=\\\"mt-2\\\">\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.required\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.required' | translate }}</p>\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.minlength\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.minlength' | translate: { value: inquiryForm.controls.telephone.errors.minlength.requiredLength } }}\\n                        </p>\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.maxlength\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.maxlength' | translate: { value: inquiryForm.controls.telephone.errors.maxlength.requiredLength } }}\\n                        </p>\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.telephone\\\" class=\\\"text-danger\\\">{{ 'form.validation.telephone' | translate }}</p>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"buttons mx-auto text-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block py-3 mb-3\\\" (click)=\\\"onSubmit()\\\">{{ 'inquiry.input.next' | translate }}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-link\\\" routerLink=\\\"/purchase/root\\\">{{ 'inquiry.input.prev' | translate }}</button>\\n    </div>\\n\\n</div>\"","export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\n    <div class=\\\"mb-4\\\">\\n        <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.print.title' | translate }}</h2>\\n        <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'inquiry.print.read' | translate\\\"></p>\\n    </div>\\n\\n    <div class=\\\"buttons mx-auto text-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block py-3\\\" routerLink=\\\"/inquiry/input\\\">\\n            {{ 'inquiry.print.prev' | translate }}\\n        </button>\\n    </div>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL2lucXVpcnkvY29tcG9uZW50cy9wYWdlcy9pbnF1aXJ5LWNvbmZpcm0vaW5xdWlyeS1jb25maXJtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { factory } from '@cinerino/api-javascript-client';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../../../../environments/environment';\nimport { changeTicketCountByOrder, getTicketPrice, IEventOrder, orderToEventOrders } from '../../../../../functions';\nimport { OrderService, ReservationService, UserService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-confirm',\n    templateUrl: './inquiry-confirm.component.html',\n    styleUrls: ['./inquiry-confirm.component.scss']\n})\nexport class InquiryConfirmComponent implements OnInit {\n    public order: Observable<reducers.IOrderState>;\n    public user: Observable<reducers.IUserState>;\n    public reservation: Observable<reducers.IReservationState>;\n    public isLoading: Observable<boolean>;\n    public error: Observable<string | null>;\n    public moment: typeof moment = moment;\n    public getTicketPrice = getTicketPrice;\n    public changeTicketCountByOrder = changeTicketCountByOrder;\n    public eventOrders: IEventOrder[];\n    public orderStatus: typeof factory.orderStatus = factory.orderStatus;\n    public environment = environment;\n    private timer: any;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private router: Router,\n        private userService: UserService,\n        private utilService: UtilService,\n        private orderService: OrderService,\n        private reservationService: ReservationService,\n        private translate: TranslateService\n    ) { }\n\n    public ngOnInit() {\n        this.eventOrders = [];\n        this.order = this.store.pipe(select(reducers.getOrder));\n        this.user = this.store.pipe(select(reducers.getUser));\n        this.reservation = this.store.pipe(select(reducers.getReservation));\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.error = this.store.pipe(select(reducers.getError));\n        this.order.subscribe((value) => {\n            if (value.order === undefined) {\n                this.router.navigate(['/error']);\n                return;\n            }\n            const order = value.order;\n            this.eventOrders = orderToEventOrders({ order });\n        }).unsubscribe();\n        if (environment.INQUIRY_PRINT_WAIT_TIME !== '') {\n            const time = Number(environment.INQUIRY_PRINT_WAIT_TIME);\n            this.timer = setTimeout(() => {\n                this.router.navigate(['/inquiry/input']);\n            }, time);\n        }\n    }\n\n    /**\n     * キャンセル確認\n     */\n    public cancelConfirm() {\n        this.utilService.openConfirm({\n            title: this.translate.instant('common.confirm'),\n            body: this.translate.instant('inquiry.confirm.confirm.cancel'),\n            cb: async () => {\n                try {\n                    const userData = await this.userService.getData();\n                    const orderData = await this.orderService.getData();\n                    const order = orderData.order;\n                    if (order === undefined) {\n                        this.utilService.openAlert({\n                            title: this.translate.instant('common.error'),\n                            body: `\n                            <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.cancel')}</p>\n                                <div class=\"p-3 bg-light-gray select-text\">\n                                <code>order undefined</code>\n                            </div>`\n                        });\n                        return;\n                    }\n                    await this.orderService.cancel({ orders: [order], language: userData.language });\n                    await this.orderService.inquiry({\n                        confirmationNumber: order.confirmationNumber,\n                        customer: { telephone: order.customer.telephone }\n                    });\n                } catch (error) {\n                    console.error(error);\n                    this.utilService.openAlert({\n                        title: this.translate.instant('common.error'),\n                        body: `\n                        <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.cancel')}</p>\n                            <div class=\"p-3 bg-light-gray select-text\">\n                            <code>${JSON.stringify(error)}</code>\n                        </div>`\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     * 印刷\n     */\n    public async print() {\n        const today = moment().format('YYYYMMDD');\n        const limit = moment(today)\n            .add(environment.INQUIRY_PRINT_EXPIRED_VALUE, environment.INQUIRY_PRINT_EXPIRED_UNIT)\n            .format('YYYYMMDD');\n        const findResult = this.eventOrders.find(o => moment(o.event.startDate).format('YYYYMMDD') < limit);\n        if (findResult !== undefined) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.confirm.alert.printExpired')\n            });\n            return;\n        }\n        if (this.timer !== undefined) {\n            clearTimeout(this.timer);\n        }\n        try {\n            const orderData = await this.orderService.getData();\n            const user = await this.userService.getData();\n            if (orderData.order === undefined\n                || user.pos === undefined\n                || user.printer === undefined) {\n                this.router.navigate(['/error']);\n                return;\n            }\n            // 二重発券防止\n            const reservationNumbers = orderData.order.acceptedOffers.map((offers) => {\n                if (offers.itemOffered.typeOf !== factory.chevre.reservationType.EventReservation) {\n                    return '';\n                }\n                return offers.itemOffered.reservationNumber;\n            });\n            await this.reservationService.search({\n                typeOf: factory.chevre.reservationType.EventReservation,\n                reservationNumbers\n            });\n            const reservationData = await this.reservationService.getData();\n            const checkedInResult = reservationData.reservations.filter(r => r.checkedIn);\n            if (checkedInResult.length > 0) {\n                this.utilService.openAlert({\n                    title: this.translate.instant('common.error'),\n                    body: this.translate.instant('inquiry.confirm.alert.doubleTicketing')\n                });\n                return;\n            }\n            // 印刷\n            const orders = [orderData.order];\n            const pos = user.pos;\n            const printer = user.printer;\n            await this.orderService.print({ orders, pos, printer });\n            this.router.navigate(['/inquiry/print']);\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: `\n                <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.print')}</p>\n                    <div class=\"p-3 bg-light-gray select-text\">\n                    <code>${error}</code>\n                </div>`\n            });\n        }\n    }\n\n}\n","export default \".inquiry-form {\\n  max-width: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jbGllbnQvYXBwL21vZHVsZXMvaW5xdWlyeS9jb21wb25lbnRzL3BhZ2VzL2lucXVpcnktaW5wdXQvQzpcXFVzZXJzXFxoYXRhZ3VjaGlcXERlc2t0b3BcXHdvcmtzcGFjZVxcQ2luZXJpbm9cXHBvcy9zcmNcXGNsaWVudFxcYXBwXFxtb2R1bGVzXFxpbnF1aXJ5XFxjb21wb25lbnRzXFxwYWdlc1xcaW5xdWlyeS1pbnB1dFxcaW5xdWlyeS1pbnB1dC5jb21wb25lbnQuc2NzcyIsInNyYy9jbGllbnQvYXBwL21vZHVsZXMvaW5xdWlyeS9jb21wb25lbnRzL3BhZ2VzL2lucXVpcnktaW5wdXQvaW5xdWlyeS1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2NsaWVudC9hcHAvbW9kdWxlcy9pbnF1aXJ5L2NvbXBvbmVudHMvcGFnZXMvaW5xdWlyeS1pbnB1dC9pbnF1aXJ5LWlucHV0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlucXVpcnktZm9ybSAge1xuICAgIG1heC13aWR0aDogNTAwcHg7XG59IiwiLmlucXVpcnktZm9ybSB7XG4gIG1heC13aWR0aDogNTAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as libphonenumber from 'libphonenumber-js';\nimport { environment } from '../../../../../../environments/environment';\nimport { OrderService, UtilService } from '../../../../../services';\n\n@Component({\n    selector: 'app-inquiry-input',\n    templateUrl: './inquiry-input.component.html',\n    styleUrls: ['./inquiry-input.component.scss']\n})\nexport class InquiryInputComponent implements OnInit {\n    public inquiryForm: FormGroup;\n    public environment = environment;\n    constructor(\n        private formBuilder: FormBuilder,\n        private utilService: UtilService,\n        private orderService: OrderService,\n        private router: Router,\n        private translate: TranslateService\n    ) { }\n\n    public ngOnInit() {\n        this.createInquiryForm();\n    }\n\n    /**\n     * 照会フォーム作成\n     */\n    private createInquiryForm() {\n        const TEL_MAX_LENGTH = 15;\n        const TEL_MIN_LENGTH = 9;\n        this.inquiryForm = this.formBuilder.group({\n            confirmationNumber: ['', [\n                Validators.required,\n                Validators.pattern(/^[0-9]+$/)\n            ]],\n            telephone: ['', [\n                Validators.required,\n                Validators.maxLength(TEL_MAX_LENGTH),\n                Validators.minLength(TEL_MIN_LENGTH),\n                (control: AbstractControl): ValidationErrors | null => {\n                    const field = control.root.get('telephone');\n                    if (field !== null) {\n                        if (field.value === '') {\n                            return null;\n                        }\n                        const parsedNumber = (new RegExp(/^\\+/).test(field.value))\n                            ? libphonenumber.parse(field.value)\n                            : libphonenumber.parse(field.value, 'JP');\n                        if (parsedNumber.phone === undefined) {\n                            return { telephone: true };\n                        }\n                        const isValid = libphonenumber.isValidNumber(parsedNumber);\n                        if (!isValid) {\n                            return { telephone: true };\n                        }\n                    }\n\n                    return null;\n                }\n            ]]\n        });\n    }\n\n    /**\n     * 照会\n     */\n    public async onSubmit() {\n        Object.keys(this.inquiryForm.controls).forEach((key) => {\n            this.inquiryForm.controls[key].markAsTouched();\n        });\n        this.inquiryForm.controls.confirmationNumber.setValue((<HTMLInputElement>document.getElementById('confirmationNumber')).value);\n        this.inquiryForm.controls.telephone.setValue((<HTMLInputElement>document.getElementById('telephone')).value);\n        if (this.inquiryForm.invalid) {\n            return;\n        }\n        try {\n            const confirmationNumber = this.inquiryForm.controls.confirmationNumber.value;\n            const telephone = this.inquiryForm.controls.telephone.value;\n            await this.orderService.inquiry({\n                confirmationNumber,\n                customer: { telephone }\n            });\n            this.router.navigate(['/inquiry/confirm']);\n        } catch (error) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.input.validation')\n            });\n        }\n    }\n\n    /**\n     * 確認番号変更\n     */\n    public changeConfirmationNumber(value: string) {\n        this.inquiryForm.controls.confirmationNumber.setValue(value);\n    }\n\n    /**\n     * 電話番号変更\n     */\n    public changeTelephone(value: string) {\n        this.inquiryForm.controls.telephone.setValue(value);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL2lucXVpcnkvY29tcG9uZW50cy9wYWdlcy9pbnF1aXJ5LXByaW50L2lucXVpcnktcHJpbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-inquiry-print',\n    templateUrl: './inquiry-print.component.html',\n    styleUrls: ['./inquiry-print.component.scss']\n})\nexport class InquiryPrintComponent implements OnInit, OnDestroy {\n    private timer: any;\n    constructor(\n        private router: Router\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public ngOnInit() {\n        if (environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME === '') {\n            return;\n        }\n        const time = Number(environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME);\n        this.timer = setTimeout(() => {\n            this.router.navigate(['/inquiry/input']);\n        }, time);\n    }\n\n    /**\n     * 破棄\n     */\n    public ngOnDestroy() {\n        if (this.timer === undefined) {\n            return;\n        }\n        clearTimeout(this.timer);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardService } from '../../canActivates';\nimport { SettingGuardService } from '../../canActivates/setting-guard.service';\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: BaseComponent,\n  canActivate: [AuthGuardService, SettingGuardService],\n  children: [\n    { path: 'input', component: InquiryInputComponent },\n    { path: 'confirm', component: InquiryConfirmComponent },\n    { path: 'print', component: InquiryPrintComponent }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InquiryRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\nimport { InquiryRoutingModule } from './inquiry-routing.module';\n\n\n@NgModule({\n  declarations: [\n    InquiryInputComponent,\n    InquiryConfirmComponent,\n    InquiryPrintComponent,\n  ],\n  imports: [\n    CommonModule,\n    InquiryRoutingModule,\n    SharedModule,\n  ]\n})\nexport class InquiryModule { }\n"],"sourceRoot":"webpack:///"}