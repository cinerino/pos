{"version":3,"sources":["app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.html","app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.html","app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.html","app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.scss","app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.ts","app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.scss","app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.ts","app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.scss","app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.ts","app/modules/inquiry/inquiry-routing.module.ts","app/modules/inquiry/inquiry.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\n    <div class=\\\"mb-4\\\">\\n        <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.confirm.title' | translate }}</h2>\\n\\n        <div class=\\\"mb-4 px-3 py-2 bg-white\\\">\\n            <div class=\\\"row align-items-center\\\">\\n                <p class=\\\"col-4\\\">\\n                    {{ 'common.confirmationNumber' | translate }}</p>\\n                <p class=\\\"col-8 text-large text-info font-weight-bold text-md-left text-right\\\">\\n                    {{ (order | async).order.confirmationNumber }}\\n                </p>\\n            </div>\\n        </div>\\n        <div *ngFor=\\\"let eventOrder of eventOrders\\\" class=\\\"mb-4 bg-white p-3\\\">\\n            <div class=\\\"mb-3\\\">\\n                <div class=\\\"mb-1\\\">\\n                    <p class=\\\"font-weight-bold text-large\\\">{{ eventOrder.event.name | changeLanguage }}</p>\\n                    <p class=\\\"text-small\\\"\\n                        *ngIf=\\\"eventOrder.event.superEvent.headline && (eventOrder.event.superEvent.headline | changeLanguage)\\\">\\n                        {{ eventOrder.event.superEvent.headline | changeLanguage }}</p>\\n                    <p class=\\\"text-small\\\"\\n                        *ngIf=\\\"eventOrder.event.superEvent.description && (eventOrder.event.superEvent.description | changeLanguage)\\\">{{\\n                        eventOrder.event.superEvent.description | changeLanguage }}</p>\\n                </div>\\n                <p class=\\\"mb-1\\\">\\n                    {{ eventOrder.event.startDate | formatDate: 'MM/DD(ddd) HH:mm' }}-{{ eventOrder.event.endDate | formatDate: 'HH:mm' }}\\n                </p>\\n                <p class=\\\"text-small mb-1\\\">\\n                    <span class=\\\"theatre-name\\\">{{ eventOrder.event.superEvent.location.name | changeLanguage }}</span>\\n                    <span class=\\\"screen-name\\\">&nbsp;/&nbsp;<span *ngIf=\\\"eventOrder.event.location.address\\\" class=\\\"mr-2\\\">{{ eventOrder.event.location.address | changeLanguage }}</span>{{ eventOrder.event.location.name | changeLanguage }}</span>\\n                    <span\\n                        *ngIf=\\\"eventOrder.event.workPerformed?.duration && moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() > 0\\\">\\n                        &nbsp;/&nbsp;<span\\n                            class=\\\"mr-1\\\">{{ 'common.duration' | translate }}</span>{{ moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() }}{{ 'common.date.minute' | translate }}\\n                    </span>\\n                </p>\\n            </div>\\n            <hr class=\\\"mb-3\\\">\\n            <app-item-list [acceptedOffers]=\\\"eventOrder.data\\\"></app-item-list>\\n        </div>\\n\\n\\n        <div class=\\\"mb-4 px-3 bg-white\\\">\\n            <div class=\\\"py-3 border-bottom border-gray\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.customerName' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.familyName }}\\n                        {{ (order | async).order.customer.givenName }}</p>\\n                </div>\\n            </div>\\n            <div class=\\\"py-3 border-bottom border-gray\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.email' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.email }}</p>\\n                </div>\\n            </div>\\n            <div class=\\\"py-3\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.telephone' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">{{ (order | async).order.customer.telephone | libphonenumberFormat }}</p>\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"py-3\\\" *ngIf=\\\"(order | async).order.price > 0\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <p class=\\\"mb-2 mb-md-0 col-md-4\\\">{{ 'common.paymentMethod' | translate }}</p>\\n                    <p class=\\\"col-md-8\\\">クレジットカード</p>\\n                </div>\\n            </div> -->\\n        </div>\\n    </div>\\n\\n    <div class=\\\"buttons mx-auto text-center\\\">\\n        <button *ngIf=\\\"environment.INQUIRY_PRINT\\\"\\n            [disabled]=\\\"(order | async).order.orderStatus !== orderStatus.OrderDelivered\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-primary btn-block py-3 mb-3\\\" (click)=\\\"print()\\\"\\n            [disabled]=\\\"isLoading | async\\\">{{ 'inquiry.confirm.next' | translate }}</button>\\n        <button *ngIf=\\\"environment.INQUIRY_CANCEL\\\"\\n            [disabled]=\\\"(order | async).order.orderStatus === orderStatus.OrderReturned\\\" type=\\\"button\\\"\\n            class=\\\"btn btn-danger btn-block py-3 mb-3\\\"\\n            (click)=\\\"cancelConfirm()\\\">{{ 'inquiry.confirm.cancel' | translate }}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-link\\\"\\n            routerLink=\\\"/inquiry/input\\\">{{ 'inquiry.confirm.prev' | translate }}</button>\\n    </div>\\n\\n</div>\"","export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\n    <form [formGroup]=\\\"inquiryForm\\\">\\n        <div class=\\\"mb-4\\\">\\n            <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.input.title' | translate }}</h2>\\n            <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'inquiry.input.read' | translate\\\"></p>\\n\\n            <div class=\\\"inquiry-form mx-auto p-3 bg-white\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"mb-2\\\" for=\\\"\\\">{{ 'common.confirmationNumber' | translate }}</label>\\n                    <app-numeric-keypad *ngIf=\\\"environment.INQUIRY_INPUT_KEYPAD\\\" inputType=\\\"number\\\"\\n                        [inputValue]=\\\"inquiryForm.controls.confirmationNumber.value\\\"\\n                        (change)=\\\"changeConfirmationNumber($event)\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"confirmationNumber\\\"\\n                            id=\\\"confirmationNumber\\\" [placeholder]=\\\"'form.placeholder.confirmationNumber' | translate\\\"\\n                            readonly>\\n                    </app-numeric-keypad>\\n                    <input *ngIf=\\\"!environment.INQUIRY_INPUT_KEYPAD\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                        formControlName=\\\"confirmationNumber\\\" id=\\\"confirmationNumber\\\"\\n                        [placeholder]=\\\"'form.placeholder.confirmationNumber' | translate\\\">\\n                    <div *ngIf=\\\"inquiryForm.controls.confirmationNumber.invalid && inquiryForm.controls.confirmationNumber.touched\\\"\\n                        class=\\\"mt-2\\\">\\n                        <p *ngIf=\\\"inquiryForm.controls.confirmationNumber.errors.required\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.required' | translate }}</p>\\n                        <p *ngIf=\\\"inquiryForm.controls.confirmationNumber.errors.pattern\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.number' | translate }}</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group mb-0\\\">\\n                    <label class=\\\"mb-2\\\" for=\\\"\\\">{{ 'common.telephone' | translate }}</label>\\n                    <app-numeric-keypad *ngIf=\\\"environment.INQUIRY_INPUT_KEYPAD\\\" inputType=\\\"telephone\\\"\\n                        [inputValue]=\\\"inquiryForm.controls.telephone.value\\\" (change)=\\\"changeTelephone($event)\\\">\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"telephone\\\" id=\\\"telephone\\\"\\n                            [placeholder]=\\\"'form.placeholder.telephone' | translate\\\" readonly>\\n                    </app-numeric-keypad>\\n                    <input *ngIf=\\\"!environment.INQUIRY_INPUT_KEYPAD\\\" type=\\\"password\\\" class=\\\"form-control\\\"\\n                        formControlName=\\\"telephone\\\" id=\\\"telephone\\\"\\n                        [placeholder]=\\\"'form.placeholder.telephone' | translate\\\">\\n                    <div *ngIf=\\\"inquiryForm.controls.telephone.invalid && inquiryForm.controls.telephone.touched\\\"\\n                        class=\\\"mt-2\\\">\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.required\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.required' | translate }}</p>\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.minlength\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.minlength' | translate: { value: inquiryForm.controls.telephone.errors.minlength.requiredLength } }}\\n                        </p>\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.maxlength\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.maxlength' | translate: { value: inquiryForm.controls.telephone.errors.maxlength.requiredLength } }}\\n                        </p>\\n                        <p *ngIf=\\\"inquiryForm.controls.telephone.errors.telephone\\\" class=\\\"text-danger\\\">\\n                            {{ 'form.validation.telephone' | translate }}</p>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n        <div class=\\\"buttons mx-auto text-center\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"isLoading | async\\\" class=\\\"btn btn-primary btn-block py-3 mb-3\\\"\\n                (click)=\\\"onSubmit()\\\">{{ 'inquiry.input.next' | translate }}</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-link\\\"\\n                routerLink=\\\"/purchase/root\\\">{{ 'inquiry.input.prev' | translate }}</button>\\n        </div>\\n    </form>\\n</div>\"","export default \"<div class=\\\"contents-width mx-auto px-3 py-5\\\">\\n    <div class=\\\"mb-4\\\">\\n        <h2 class=\\\"text-large mb-4 text-center font-weight-bold\\\">{{ 'inquiry.print.title' | translate }}</h2>\\n        <p class=\\\"mb-4 text-md-center\\\" [innerHTML]=\\\"'inquiry.print.read' | translate\\\"></p>\\n    </div>\\n\\n    <div class=\\\"buttons mx-auto text-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block py-3\\\" routerLink=\\\"/inquiry/input\\\">\\n            {{ 'inquiry.print.prev' | translate }}\\n        </button>\\n    </div>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL2lucXVpcnkvY29tcG9uZW50cy9wYWdlcy9pbnF1aXJ5LWNvbmZpcm0vaW5xdWlyeS1jb25maXJtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { factory } from '@cinerino/api-javascript-client';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { changeTicketCountByOrder, IEventOrder, order2EventOrders } from '../../../../../functions';\nimport { OrderService, ReservationService, UserService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-confirm',\n    templateUrl: './inquiry-confirm.component.html',\n    styleUrls: ['./inquiry-confirm.component.scss']\n})\nexport class InquiryConfirmComponent implements OnInit {\n    public order: Observable<reducers.IOrderState>;\n    public user: Observable<reducers.IUserState>;\n    public reservation: Observable<reducers.IReservationState>;\n    public isLoading: Observable<boolean>;\n    public error: Observable<string | null>;\n    public moment: typeof moment = moment;\n    public changeTicketCountByOrder = changeTicketCountByOrder;\n    public eventOrders: IEventOrder[];\n    public orderStatus: typeof factory.orderStatus = factory.orderStatus;\n    public environment = getEnvironment();\n    private timer: any;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private router: Router,\n        private userService: UserService,\n        private utilService: UtilService,\n        private orderService: OrderService,\n        private reservationService: ReservationService,\n        private translate: TranslateService\n    ) { }\n\n    public ngOnInit() {\n        this.eventOrders = [];\n        this.order = this.store.pipe(select(reducers.getOrder));\n        this.user = this.store.pipe(select(reducers.getUser));\n        this.reservation = this.store.pipe(select(reducers.getReservation));\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.error = this.store.pipe(select(reducers.getError));\n        this.order.subscribe((value) => {\n            if (value.order === undefined) {\n                this.router.navigate(['/error']);\n                return;\n            }\n            const order = value.order;\n            this.eventOrders = order2EventOrders({ order });\n        }).unsubscribe();\n        if (this.environment.INQUIRY_PRINT_WAIT_TIME !== '') {\n            const time = Number(this.environment.INQUIRY_PRINT_WAIT_TIME);\n            this.timer = setTimeout(() => {\n                this.router.navigate(['/inquiry/input']);\n            }, time);\n        }\n    }\n\n    /**\n     * キャンセル確認\n     */\n    public cancelConfirm() {\n        this.utilService.openConfirm({\n            title: this.translate.instant('common.confirm'),\n            body: this.translate.instant('inquiry.confirm.confirm.cancel'),\n            cb: async () => {\n                try {\n                    const userData = await this.userService.getData();\n                    const orderData = await this.orderService.getData();\n                    const order = orderData.order;\n                    if (order === undefined) {\n                        this.utilService.openAlert({\n                            title: this.translate.instant('common.error'),\n                            body: `\n                            <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.cancel')}</p>\n                                <div class=\"p-3 bg-light-gray select-text\">\n                                <code>order undefined</code>\n                            </div>`\n                        });\n                        return;\n                    }\n                    await this.orderService.cancel({ orders: [order], language: userData.language });\n                    await this.orderService.inquiry({\n                        confirmationNumber: order.confirmationNumber,\n                        customer: { telephone: order.customer.telephone }\n                    });\n                } catch (error) {\n                    console.error(error);\n                    this.utilService.openAlert({\n                        title: this.translate.instant('common.error'),\n                        body: `\n                        <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.cancel')}</p>\n                            <div class=\"p-3 bg-light-gray select-text\">\n                            <code>${JSON.stringify(error)}</code>\n                        </div>`\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     * 印刷\n     */\n    public async print() {\n        const today = moment().format('YYYYMMDD');\n        const limit = moment(today)\n            .add(this.environment.INQUIRY_PRINT_EXPIRED_VALUE, this.environment.INQUIRY_PRINT_EXPIRED_UNIT)\n            .format('YYYYMMDD');\n        const findResult = this.eventOrders.find(o => moment(o.event.startDate).format('YYYYMMDD') < limit);\n        if (findResult !== undefined) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.confirm.alert.printExpired')\n            });\n            return;\n        }\n        if (this.timer !== undefined) {\n            clearTimeout(this.timer);\n        }\n        try {\n            const orderData = await this.orderService.getData();\n            const user = await this.userService.getData();\n            if (orderData.order === undefined\n                || user.pos === undefined\n                || user.printer === undefined) {\n                this.router.navigate(['/error']);\n                return;\n            }\n            // 二重発券防止\n            const reservationNumbers = orderData.order.acceptedOffers.map((offers) => {\n                if (offers.itemOffered.typeOf !== factory.chevre.reservationType.EventReservation) {\n                    return '';\n                }\n                return offers.itemOffered.reservationNumber;\n            });\n            await this.reservationService.search({\n                typeOf: factory.chevre.reservationType.EventReservation,\n                reservationNumbers\n            });\n            const reservationData = await this.reservationService.getData();\n            const checkedInResult = reservationData.reservations.filter(r => r.checkedIn);\n            if (checkedInResult.length > 0) {\n                this.utilService.openAlert({\n                    title: this.translate.instant('common.error'),\n                    body: this.translate.instant('inquiry.confirm.alert.doubleTicketing')\n                });\n                return;\n            }\n            // 印刷\n            const orders = [orderData.order];\n            const pos = user.pos;\n            const printer = user.printer;\n            await this.orderService.print({ orders, pos, printer });\n            this.router.navigate(['/inquiry/print']);\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: `\n                <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.print')}</p>\n                    <div class=\"p-3 bg-light-gray select-text\">\n                    <code>${error}</code>\n                </div>`\n            });\n        }\n    }\n\n}\n","export default \".inquiry-form {\\n  max-width: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jbGllbnQvYXBwL21vZHVsZXMvaW5xdWlyeS9jb21wb25lbnRzL3BhZ2VzL2lucXVpcnktaW5wdXQvQzpcXFVzZXJzXFxoYXRhZ3VjaGlcXERlc2t0b3BcXHdvcmtzcGFjZVxcQ2luZXJpbm9cXHBvcy9zcmNcXGNsaWVudFxcYXBwXFxtb2R1bGVzXFxpbnF1aXJ5XFxjb21wb25lbnRzXFxwYWdlc1xcaW5xdWlyeS1pbnB1dFxcaW5xdWlyeS1pbnB1dC5jb21wb25lbnQuc2NzcyIsInNyYy9jbGllbnQvYXBwL21vZHVsZXMvaW5xdWlyeS9jb21wb25lbnRzL3BhZ2VzL2lucXVpcnktaW5wdXQvaW5xdWlyeS1pbnB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2NsaWVudC9hcHAvbW9kdWxlcy9pbnF1aXJ5L2NvbXBvbmVudHMvcGFnZXMvaW5xdWlyeS1pbnB1dC9pbnF1aXJ5LWlucHV0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlucXVpcnktZm9ybSAge1xuICAgIG1heC13aWR0aDogNTAwcHg7XG59IiwiLmlucXVpcnktZm9ybSB7XG4gIG1heC13aWR0aDogNTAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as libphonenumber from 'libphonenumber-js';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { OrderService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-input',\n    templateUrl: './inquiry-input.component.html',\n    styleUrls: ['./inquiry-input.component.scss']\n})\nexport class InquiryInputComponent implements OnInit {\n    public inquiryForm: FormGroup;\n    public environment = getEnvironment();\n    public isLoading: Observable<boolean>;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private formBuilder: FormBuilder,\n        private utilService: UtilService,\n        private orderService: OrderService,\n        private router: Router,\n        private translate: TranslateService\n    ) { }\n\n    public ngOnInit() {\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.createInquiryForm();\n    }\n\n    /**\n     * 照会フォーム作成\n     */\n    private createInquiryForm() {\n        const TEL_MAX_LENGTH = 15;\n        const TEL_MIN_LENGTH = 9;\n        this.inquiryForm = this.formBuilder.group({\n            confirmationNumber: ['', [\n                Validators.required,\n                Validators.pattern(/^[0-9]+$/)\n            ]],\n            telephone: ['', [\n                Validators.required,\n                Validators.maxLength(TEL_MAX_LENGTH),\n                Validators.minLength(TEL_MIN_LENGTH),\n                (control: AbstractControl): ValidationErrors | null => {\n                    const field = control.root.get('telephone');\n                    if (field !== null) {\n                        if (field.value === '') {\n                            return null;\n                        }\n                        const parsedNumber = (new RegExp(/^\\+/).test(field.value))\n                            ? libphonenumber.parse(field.value)\n                            : libphonenumber.parse(field.value, 'JP');\n                        if (parsedNumber.phone === undefined) {\n                            return { telephone: true };\n                        }\n                        const isValid = libphonenumber.isValidNumber(parsedNumber);\n                        if (!isValid) {\n                            return { telephone: true };\n                        }\n                    }\n\n                    return null;\n                }\n            ]]\n        });\n    }\n\n    /**\n     * 照会\n     */\n    public async onSubmit() {\n        Object.keys(this.inquiryForm.controls).forEach((key) => {\n            this.inquiryForm.controls[key].markAsTouched();\n        });\n        this.inquiryForm.controls.confirmationNumber.setValue((<HTMLInputElement>document.getElementById('confirmationNumber')).value);\n        this.inquiryForm.controls.telephone.setValue((<HTMLInputElement>document.getElementById('telephone')).value);\n        if (this.inquiryForm.invalid) {\n            return;\n        }\n        try {\n            const confirmationNumber = this.inquiryForm.controls.confirmationNumber.value;\n            const telephone = this.inquiryForm.controls.telephone.value;\n            await this.orderService.inquiry({\n                confirmationNumber,\n                customer: { telephone }\n            });\n            this.router.navigate(['/inquiry/confirm']);\n        } catch (error) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.input.validation')\n            });\n        }\n    }\n\n    /**\n     * 確認番号変更\n     */\n    public changeConfirmationNumber(value: string) {\n        this.inquiryForm.controls.confirmationNumber.setValue(value);\n    }\n\n    /**\n     * 電話番号変更\n     */\n    public changeTelephone(value: string) {\n        this.inquiryForm.controls.telephone.setValue(value);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY2xpZW50L2FwcC9tb2R1bGVzL2lucXVpcnkvY29tcG9uZW50cy9wYWdlcy9pbnF1aXJ5LXByaW50L2lucXVpcnktcHJpbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { getEnvironment } from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-inquiry-print',\n    templateUrl: './inquiry-print.component.html',\n    styleUrls: ['./inquiry-print.component.scss']\n})\nexport class InquiryPrintComponent implements OnInit, OnDestroy {\n    public environment = getEnvironment();\n    private timer: any;\n\n    constructor(\n        private router: Router\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public ngOnInit() {\n        if (this.environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME === '') {\n            return;\n        }\n        const time = Number(this.environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME);\n        this.timer = setTimeout(() => {\n            this.router.navigate(['/inquiry/input']);\n        }, time);\n    }\n\n    /**\n     * 破棄\n     */\n    public ngOnDestroy() {\n        if (this.timer === undefined) {\n            return;\n        }\n        clearTimeout(this.timer);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardService } from '../../canActivates';\nimport { SettingGuardService } from '../../canActivates/setting-guard.service';\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: BaseComponent,\n  canActivate: [AuthGuardService, SettingGuardService],\n  children: [\n    { path: 'input', component: InquiryInputComponent },\n    { path: 'confirm', component: InquiryConfirmComponent },\n    { path: 'print', component: InquiryPrintComponent }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InquiryRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\nimport { InquiryRoutingModule } from './inquiry-routing.module';\n\n\n@NgModule({\n  declarations: [\n    InquiryInputComponent,\n    InquiryConfirmComponent,\n    InquiryPrintComponent,\n  ],\n  imports: [\n    CommonModule,\n    InquiryRoutingModule,\n    SharedModule,\n  ]\n})\nexport class InquiryModule { }\n"],"sourceRoot":"webpack:///","file":"modules-inquiry-inquiry-module-es5.js"}