(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"+X77":function(e,t,n){"use strict";n.r(t),t.default='<div class="contents-width mx-auto px-3 py-5">\n    <div class="mb-4">\n        <h2 class="text-large mb-4 text-center font-weight-bold">{{ \'inquiry.confirm.title\' | translate }}</h2>\n\n        <div class="mb-4 px-3 py-2 bg-white">\n            <div class="row align-items-center">\n                <p class="col-4">\n                    {{ \'common.confirmationNumber\' | translate }}</p>\n                <p class="col-8 text-large text-info font-weight-bold text-md-left text-right">\n                    {{ (order | async).order.confirmationNumber }}\n                </p>\n            </div>\n        </div>\n        <div *ngFor="let eventOrder of eventOrders" class="mb-4 bg-white p-3">\n            <div class="mb-3">\n                <div class="mb-1">\n                    <p class="font-weight-bold text-large">{{ eventOrder.event.name | changeLanguage }}</p>\n                    <p class="text-small"\n                        *ngIf="eventOrder.event.superEvent.headline && (eventOrder.event.superEvent.headline | changeLanguage)">\n                        {{ eventOrder.event.superEvent.headline | changeLanguage }}</p>\n                    <p class="text-small"\n                        *ngIf="eventOrder.event.superEvent.description && (eventOrder.event.superEvent.description | changeLanguage)">{{\n                        eventOrder.event.superEvent.description | changeLanguage }}</p>\n                </div>\n                <p class="mb-1">\n                    {{ eventOrder.event.startDate | formatDate: \'MM/DD(ddd) HH:mm\' }}-{{ eventOrder.event.endDate | formatDate: \'HH:mm\' }}\n                </p>\n                <p class="text-small mb-1">\n                    <span class="theatre-name">{{ eventOrder.event.superEvent.location.name | changeLanguage }}</span>\n                    <span class="screen-name">&nbsp;/&nbsp;{{ eventOrder.event.location.name | changeLanguage }}</span>\n                    <span\n                        *ngIf="eventOrder.event.workPerformed?.duration && moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() > 0">\n                        &nbsp;/&nbsp;<span class="mr-1">{{ \'common.duration\' | translate }}</span>{{ moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() }}{{ \'common.date.minute\' | translate }}\n                    </span>\n                </p>\n            </div>\n            <hr class="mb-3">\n            <div *ngIf="environment.DISPLAY_TICKETED_SEAT">\n                <div *ngFor="let acceptedOffer of eventOrder.data">\n                    <p>\n                        <span *ngIf="acceptedOffer.itemOffered.reservedTicket.ticketedSeat">\n                            {{ acceptedOffer.itemOffered.reservedTicket.ticketedSeat.seatNumber }}&nbsp;/&nbsp;</span>{{ acceptedOffer.itemOffered.reservedTicket.ticketType.name | changeLanguage }}&nbsp;/&nbsp;{{\n                            getTicketPrice(acceptedOffer).single | currency : \'JPY\' }}\n                    </p>\n                </div>\n            </div>\n            <div *ngIf="!environment.DISPLAY_TICKETED_SEAT">\n                <div *ngFor="let ticket of changeTicketCountByOrder(eventOrder.data)">\n                    <p>\n                        {{ ticket.acceptedOffer.itemOffered.reservedTicket.ticketType.name | changeLanguage }}&nbsp;/&nbsp;{{\n                            getTicketPrice(ticket.acceptedOffer).single | currency : \'JPY\' }}&nbsp;\xd7&nbsp;{{ ticket.count }}\n                    </p>\n                </div>\n            </div>\n        </div>\n\n\n        <div class="mb-4 px-3 bg-white">\n            <div class="py-3 border-bottom border-gray">\n                <div class="row align-items-center">\n                    <p class="mb-2 mb-md-0 col-md-4">{{ \'common.customerName\' | translate }}</p>\n                    <p class="col-md-8">{{ (order | async).order.customer.familyName }}\n                        {{ (order | async).order.customer.givenName }}</p>\n                </div>\n            </div>\n            <div class="py-3 border-bottom border-gray">\n                <div class="row align-items-center">\n                    <p class="mb-2 mb-md-0 col-md-4">{{ \'common.email\' | translate }}</p>\n                    <p class="col-md-8">{{ (order | async).order.customer.email }}</p>\n                </div>\n            </div>\n            <div class="py-3">\n                <div class="row align-items-center">\n                    <p class="mb-2 mb-md-0 col-md-4">{{ \'common.telephone\' | translate }}</p>\n                    <p class="col-md-8">{{ (order | async).order.customer.telephone | libphonenumberFormat }}</p>\n                </div>\n            </div>\n            \x3c!-- <div class="py-3" *ngIf="(order | async).order.price > 0">\n                <div class="row align-items-center">\n                    <p class="mb-2 mb-md-0 col-md-4">{{ \'common.paymentMethod\' | translate }}</p>\n                    <p class="col-md-8">\u30af\u30ec\u30b8\u30c3\u30c8\u30ab\u30fc\u30c9</p>\n                </div>\n            </div> --\x3e\n        </div>\n    </div>\n\n    <div class="buttons mx-auto text-center">\n        <button *ngIf="environment.INQUIRY_PRINT"\n            [disabled]="(order | async).order.orderStatus !== orderStatus.OrderDelivered" type="button"\n            class="btn btn-primary btn-block py-3 mb-3" (click)="print()"\n            [disabled]="isLoading | async">{{ \'inquiry.confirm.next\' | translate }}</button>\n        <button *ngIf="environment.INQUIRY_CANCEL"\n            [disabled]="(order | async).order.orderStatus === orderStatus.OrderReturned" type="button"\n            class="btn btn-danger btn-block py-3 mb-3"\n            (click)="cancelConfirm()">{{ \'inquiry.confirm.cancel\' | translate }}</button>\n        <button type="button" class="btn btn-link"\n            routerLink="/inquiry/input">{{ \'inquiry.confirm.prev\' | translate }}</button>\n    </div>\n\n</div>'},"2+OO":function(e,t,n){"use strict";n.r(t),t.default=""},"2ISw":function(e,t,n){"use strict";n.r(t);var r=n("An66"),i=n("kZht"),o=n("DSWM"),a=n("3kIJ"),s=n("1VvW"),c=n("aDqW"),l=n("WxsR"),d=n("PIN6"),u=n("cHUu"),m=function(e,t,n,r){var i,o=arguments.length,a=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(o<3?i(a):o>3?i(t,n,a):i(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},p=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},f=function(e,t,n,r){return new(n||(n=Promise))(function(i,o){function a(e){try{c(r.next(e))}catch(t){o(t)}}function s(e){try{c(r.throw(e))}catch(t){o(t)}}function c(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(a,s)}c((r=r.apply(e,t||[])).next())})},v=function(e){return e&&e.__esModule?e:{default:e}};let h=class{constructor(e,t,n,r,i){this.formBuilder=e,this.utilService=t,this.orderService=n,this.router=r,this.translate=i,this.environment=d.a}ngOnInit(){this.createInquiryForm()}createInquiryForm(){this.inquiryForm=this.formBuilder.group({confirmationNumber:["",[a.f.required,a.f.pattern(/^[0-9]+$/)]],telephone:["",[a.f.required,a.f.maxLength(15),a.f.minLength(9),e=>{const t=e.root.get("telephone");if(null!==t){if(""===t.value)return null;const e=new RegExp(/^\+/).test(t.value)?l.c(t.value):l.c(t.value,"JP");if(void 0===e.phone)return{telephone:!0};if(!l.b(e))return{telephone:!0}}return null}]]})}onSubmit(){return f(this,void 0,void 0,function*(){if(Object.keys(this.inquiryForm.controls).forEach(e=>{this.inquiryForm.controls[e].markAsTouched()}),this.inquiryForm.controls.confirmationNumber.setValue(document.getElementById("confirmationNumber").value),this.inquiryForm.controls.telephone.setValue(document.getElementById("telephone").value),!this.inquiryForm.invalid)try{const t=this.inquiryForm.controls.confirmationNumber.value,n=this.inquiryForm.controls.telephone.value;yield this.orderService.inquiry({confirmationNumber:t,customer:{telephone:n}}),this.router.navigate(["/inquiry/confirm"])}catch(e){this.utilService.openAlert({title:this.translate.instant("common.error"),body:this.translate.instant("inquiry.input.validation")})}})}changeConfirmationNumber(e){this.inquiryForm.controls.confirmationNumber.setValue(e)}changeTelephone(e){this.inquiryForm.controls.telephone.setValue(e)}};h.ctorParameters=()=>[{type:a.a},{type:u.i},{type:u.d},{type:s.b},{type:c.c}],h=m([Object(i.n)({selector:"app-inquiry-input",template:v(n("uWiq")).default,styles:[v(n("vcNb")).default]}),p("design:paramtypes",[a.a,u.i,u.d,s.b,c.c])],h);var b=function(e,t,n,r){var i,o=arguments.length,a=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(o<3?i(a):o>3?i(t,n,a):i(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},y=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},g=function(e){return e&&e.__esModule?e:{default:e}};let I=class{constructor(e){this.router=e}ngOnInit(){if(""===d.a.INQUIRY_PRINT_SUCCESS_WAIT_TIME)return;const e=Number(d.a.INQUIRY_PRINT_SUCCESS_WAIT_TIME);this.timer=setTimeout(()=>{this.router.navigate(["/inquiry/input"])},e)}ngOnDestroy(){void 0!==this.timer&&clearTimeout(this.timer)}};I.ctorParameters=()=>[{type:s.b}],I=b([Object(i.n)({selector:"app-inquiry-print",template:g(n("w++k")).default,styles:[g(n("LlIr")).default]}),y("design:paramtypes",[s.b])],I);var O=n("unpb"),q=n("KvGu"),N=n("RRjC"),x=n("E3Fy"),R=n("ofez"),T=n("wgY5"),k=n("cF7s"),S=n("mOXJ"),w=function(e,t,n,r){var i,o=arguments.length,a=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(o<3?i(a):o>3?i(t,n,a):i(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},P=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},_=function(e,t,n,r){return new(n||(n=Promise))(function(i,o){function a(e){try{c(r.next(e))}catch(t){o(t)}}function s(e){try{c(r.throw(e))}catch(t){o(t)}}function c(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(a,s)}c((r=r.apply(e,t||[])).next())})},D=function(e){return e&&e.__esModule?e:{default:e}};let E=class{constructor(e,t,n,r,i,o,a){this.store=e,this.router=t,this.userService=n,this.utilService=r,this.orderService=i,this.reservationService=o,this.translate=a,this.moment=T,this.getTicketPrice=k.m,this.changeTicketCountByOrder=k.d,this.orderStatus=x.factory.orderStatus,this.environment=d.a}ngOnInit(){if(this.eventOrders=[],this.order=this.store.pipe(Object(R.i)(S.e)),this.user=this.store.pipe(Object(R.i)(S.i)),this.reservation=this.store.pipe(Object(R.i)(S.h)),this.isLoading=this.store.pipe(Object(R.i)(S.c)),this.error=this.store.pipe(Object(R.i)(S.b)),this.order.subscribe(e=>{if(void 0===e.order)return void this.router.navigate(["/error"]);const t=e.order;this.eventOrders=Object(k.t)({order:t})}).unsubscribe(),""!==d.a.INQUIRY_PRINT_WAIT_TIME){const e=Number(d.a.INQUIRY_PRINT_WAIT_TIME);this.timer=setTimeout(()=>{this.router.navigate(["/inquiry/input"])},e)}}cancelConfirm(){this.utilService.openConfirm({title:this.translate.instant("common.confirm"),body:this.translate.instant("inquiry.confirm.confirm.cancel"),cb:()=>_(this,void 0,void 0,function*(){try{const t=yield this.userService.getData(),n=(yield this.orderService.getData()).order;if(void 0===n)return void this.utilService.openAlert({title:this.translate.instant("common.error"),body:`\n                            <p class="mb-4">${this.translate.instant("inquiry.confirm.alert.cancel")}</p>\n                                <div class="p-3 bg-light-gray select-text">\n                                <code>order undefined</code>\n                            </div>`});yield this.orderService.cancel({orders:[n],language:t.language}),yield this.orderService.inquiry({confirmationNumber:n.confirmationNumber,customer:{telephone:n.customer.telephone}})}catch(e){console.error(e),this.utilService.openAlert({title:this.translate.instant("common.error"),body:`\n                        <p class="mb-4">${this.translate.instant("inquiry.confirm.alert.cancel")}</p>\n                            <div class="p-3 bg-light-gray select-text">\n                            <code>${JSON.stringify(e)}</code>\n                        </div>`})}})})}print(){return _(this,void 0,void 0,function*(){const e=T().format("YYYYMMDD"),t=T(e).add(d.a.INQUIRY_PRINT_EXPIRED_VALUE,d.a.INQUIRY_PRINT_EXPIRED_UNIT).format("YYYYMMDD");if(void 0===this.eventOrders.find(e=>T(e.event.startDate).format("YYYYMMDD")<t)){void 0!==this.timer&&clearTimeout(this.timer);try{const e=yield this.orderService.getData(),t=yield this.userService.getData();if(void 0===e.order||void 0===t.pos||void 0===t.printer)return void this.router.navigate(["/error"]);const r=e.order.acceptedOffers.map(e=>e.itemOffered.typeOf!==x.factory.chevre.reservationType.EventReservation?"":e.itemOffered.reservationNumber);if(yield this.reservationService.search({typeOf:x.factory.chevre.reservationType.EventReservation,reservationNumbers:r}),(yield this.reservationService.getData()).reservations.filter(e=>e.checkedIn).length>0)return void this.utilService.openAlert({title:this.translate.instant("common.error"),body:this.translate.instant("inquiry.confirm.alert.doubleTicketing")});const i=[e.order],o=t.pos,a=t.printer;yield this.orderService.print({orders:i,pos:o,printer:a}),this.router.navigate(["/inquiry/print"])}catch(n){console.error(n),this.utilService.openAlert({title:this.translate.instant("common.error"),body:`\n                <p class="mb-4">${this.translate.instant("inquiry.confirm.alert.print")}</p>\n                    <div class="p-3 bg-light-gray select-text">\n                    <code>${n}</code>\n                </div>`})}}else this.utilService.openAlert({title:this.translate.instant("common.error"),body:this.translate.instant("inquiry.confirm.alert.printExpired")})})}};E.ctorParameters=()=>[{type:R.b},{type:s.b},{type:u.h},{type:u.i},{type:u.d},{type:u.f},{type:c.c}],E=w([Object(i.n)({selector:"app-inquiry-confirm",template:D(n("+X77")).default,styles:[D(n("2+OO")).default]}),P("design:paramtypes",[R.b,s.b,u.h,u.i,u.d,u.f,c.c])],E);var F=function(e,t,n,r){var i,o=arguments.length,a=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(o<3?i(a):o>3?i(t,n,a):i(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a};const Y=[{path:"",component:N.a,canActivate:[O.a,q.a],children:[{path:"input",component:h},{path:"confirm",component:E},{path:"print",component:I}]}];let j=class{};j=F([Object(i.I)({imports:[s.c.forChild(Y)],exports:[s.c]})],j),n.d(t,"InquiryModule",function(){return L});let L=class{};L=function(e,t,n,r){var i,o=arguments.length,a=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(o<3?i(a):o>3?i(t,n,a):i(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a}([Object(i.I)({declarations:[h,h,I],imports:[r.b,j,o.a]})],L)},LlIr:function(e,t,n){"use strict";n.r(t),t.default=""},uWiq:function(e,t,n){"use strict";n.r(t),t.default='<div class="contents-width mx-auto px-3 py-5">\n    <div class="mb-4">\n        <h2 class="text-large mb-4 text-center font-weight-bold">{{ \'inquiry.input.title\' | translate }}</h2>\n        <p class="mb-4 text-md-center" [innerHTML]="\'inquiry.input.read\' | translate"></p>\n\n        <div class="inquiry-form mx-auto p-3 bg-white">\n            <form [formGroup]="inquiryForm">\n                <div class="form-group">\n                    <label class="mb-2" for="">{{ \'common.confirmationNumber\' | translate }}</label>\n                    <app-numeric-keypad *ngIf="environment.INQUIRY_INPUT_KEYPAD" inputType="number" [inputValue]="inquiryForm.controls.confirmationNumber.value"\n                        (change)="changeConfirmationNumber($event)">\n                        <input type="text" class="form-control" formControlName="confirmationNumber"\n                            id="confirmationNumber" [placeholder]="\'form.placeholder.confirmationNumber\' | translate"\n                            readonly>\n                    </app-numeric-keypad>\n                    <input *ngIf="!environment.INQUIRY_INPUT_KEYPAD" type="text" class="form-control" formControlName="confirmationNumber" id="confirmationNumber"\n                        [placeholder]="\'form.placeholder.confirmationNumber\' | translate">\n                    <div *ngIf="inquiryForm.controls.confirmationNumber.invalid && inquiryForm.controls.confirmationNumber.touched"\n                        class="mt-2">\n                        <p *ngIf="inquiryForm.controls.confirmationNumber.errors.required" class="text-danger">\n                            {{ \'form.validation.required\' | translate }}</p>\n                        <p *ngIf="inquiryForm.controls.confirmationNumber.errors.pattern" class="text-danger">\n                            {{ \'form.validation.number\' | translate }}</p>\n                    </div>\n                </div>\n                <div class="form-group mb-0">\n                    <label class="mb-2" for="">{{ \'common.telephone\' | translate }}</label>\n                    <app-numeric-keypad *ngIf="environment.INQUIRY_INPUT_KEYPAD" inputType="telephone" [inputValue]="inquiryForm.controls.telephone.value"\n                        (change)="changeTelephone($event)">\n                        <input type="password" class="form-control" formControlName="telephone" id="telephone"\n                            [placeholder]="\'form.placeholder.telephone\' | translate" readonly>\n                    </app-numeric-keypad>\n                    <input *ngIf="!environment.INQUIRY_INPUT_KEYPAD" type="password" class="form-control" formControlName="telephone" id="telephone"\n                        [placeholder]="\'form.placeholder.telephone\' | translate">\n                    <div *ngIf="inquiryForm.controls.telephone.invalid && inquiryForm.controls.telephone.touched"\n                        class="mt-2">\n                        <p *ngIf="inquiryForm.controls.telephone.errors.required" class="text-danger">\n                            {{ \'form.validation.required\' | translate }}</p>\n                        <p *ngIf="inquiryForm.controls.telephone.errors.minlength" class="text-danger">\n                            {{ \'form.validation.minlength\' | translate: { value: inquiryForm.controls.telephone.errors.minlength.requiredLength } }}\n                        </p>\n                        <p *ngIf="inquiryForm.controls.telephone.errors.maxlength" class="text-danger">\n                            {{ \'form.validation.maxlength\' | translate: { value: inquiryForm.controls.telephone.errors.maxlength.requiredLength } }}\n                        </p>\n                        <p *ngIf="inquiryForm.controls.telephone.errors.telephone" class="text-danger">{{ \'form.validation.telephone\' | translate }}</p>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class="buttons mx-auto text-center">\n        <button type="button" class="btn btn-primary btn-block py-3 mb-3" (click)="onSubmit()">{{ \'inquiry.input.next\' | translate }}</button>\n        <button type="button" class="btn btn-link" routerLink="/purchase/root">{{ \'inquiry.input.prev\' | translate }}</button>\n    </div>\n\n</div>'},vcNb:function(e,t,n){"use strict";n.r(t),t.default=".inquiry-form {\n  max-width: 500px;\n}"},"w++k":function(e,t,n){"use strict";n.r(t),t.default='<div class="contents-width mx-auto px-3 py-5">\n    <div class="mb-4">\n        <h2 class="text-large mb-4 text-center font-weight-bold">{{ \'inquiry.print.title\' | translate }}</h2>\n        <p class="mb-4 text-md-center" [innerHTML]="\'inquiry.print.read\' | translate"></p>\n    </div>\n\n    <div class="buttons mx-auto text-center">\n        <button type="button" class="btn btn-primary btn-block py-3" routerLink="/inquiry/input">\n            {{ \'inquiry.print.prev\' | translate }}\n        </button>\n    </div>\n</div>'}}]);