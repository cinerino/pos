function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"744H":function(e,t,n){"use strict";n.r(t),t.default='<div class="contents-width mx-auto px-3 py-5">\n    <form *ngIf="settingForm" [formGroup]="settingForm">\n        <div class="mb-4">\n            <h2 class="text-large mb-4 text-center font-weight-bold">{{ \'setting.title\' | translate }}</h2>\n            <p class="mb-4 text-md-center" [innerHTML]="\'setting.read\' | translate"></p>\n            <div class="p-3 bg-white">\n\n                <div class="form-group">\n                    <div class="row align-items-center">\n                        <p class="col-md-4 py-2 text-md-right">{{ \'common.theater\' | translate }}</p>\n                        <div class="col-md-8">\n                            <select class="form-control" formControlName="sellerBranchCode" (change)="changePosList()">\n                                <option value="">{{ \'setting.unselected\' | translate }}</option>\n                                <option *ngFor="let theater of (master | async).sellers"\n                                    [value]="theater.location.branchCode">{{\n                                    theater.name.ja }}</option>\n                            </select>\n                            <div *ngIf="settingForm.controls.sellerBranchCode.invalid && settingForm.controls.sellerBranchCode.touched"\n                                class="mt-2">\n                                <p *ngIf="settingForm.controls.sellerBranchCode.errors.required" class="text-danger">\n                                    {{ \'form.validation.unselected\' | translate }}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="row align-items-center">\n                        <p class="col-md-4 py-2 text-md-right">{{ \'setting.pos\' | translate }}</p>\n                        <div class="col-md-8">\n                            <select class="form-control" formControlName="posId">\n                                <option value="">{{ \'setting.unselected\' | translate }}</option>\n                                <option *ngFor="let pos of posList" [value]="pos.id">{{ pos.name }}</option>\n                            </select>\n                            <div *ngIf="settingForm.controls.posId.invalid && settingForm.controls.posId.touched"\n                                class="mt-2">\n                                <p *ngIf="settingForm.controls.posId.errors.required" class="text-danger">\n                                    {{ \'form.validation.unselected\' | translate }}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="row align-items-center">\n                        <p class="col-md-4 py-2 text-md-right">{{ \'common.familyName\' | translate }}</p>\n                        <div class="col-md-8">\n                            <input type="text" class="form-control" formControlName="familyName" placeholder="\u30e2\u30fc\u30b7\u30e7\u30f3">\n                            <div *ngIf="settingForm.controls.familyName.invalid && settingForm.controls.familyName.touched"\n                                class="mt-2">\n                                <p *ngIf="settingForm.controls.familyName.errors.required" class="text-danger">\n                                    {{ \'form.validation.required\' | translate }}</p>\n                                <p *ngIf="settingForm.controls.familyName.errors.maxlength" class="text-danger">\n                                    {{ \'form.validation.maxlength\' | translate: { value: settingForm.controls.familyName.errors.maxlength.requiredLength } }}\n                                </p>\n                                <p *ngIf="settingForm.controls.familyName.errors.pattern" class="text-danger">\n                                    {{ \'form.validation.fullKana\' | translate }}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="row align-items-center">\n                        <p class="col-md-4 py-2 text-md-right">{{ \'common.givenName\' | translate }}</p>\n                        <div class="col-md-8">\n                            <input type="text" class="form-control" formControlName="givenName" placeholder="\u30d4\u30af\u30c1\u30e3\u30fc">\n                            <div *ngIf="settingForm.controls.givenName.invalid && settingForm.controls.givenName.touched"\n                                class="mt-2">\n                                <p *ngIf="settingForm.controls.givenName.errors.required" class="text-danger">\n                                    {{ \'form.validation.required\' | translate }}</p>\n                                <p *ngIf="settingForm.controls.givenName.errors.maxlength" class="text-danger">\n                                    {{ \'form.validation.maxlength\' | translate: { value: settingForm.controls.givenName.errors.maxlength.requiredLength } }}\n                                </p>\n                                <p *ngIf="settingForm.controls.givenName.errors.pattern" class="text-danger">\n                                    {{ \'form.validation.fullKana\' | translate }}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="row align-items-center">\n                        <p class="col-md-4 py-2 text-md-right">{{ \'common.email\' | translate }}</p>\n                        <div class="col-md-8">\n                            <input type="email" class="form-control" formControlName="email"\n                                placeholder="motionpicture@example.jp">\n                            <div *ngIf="settingForm.controls.email.invalid && settingForm.controls.email.touched"\n                                class="mt-2">\n                                <p *ngIf="settingForm.controls.email.errors.required" class="text-danger">\n                                    {{ \'form.validation.required\' | translate }}</p>\n                                <p *ngIf="settingForm.controls.email.errors.maxlength" class="text-danger">\n                                    {{ \'form.validation.maxlength\' | translate: { value: settingForm.controls.email.errors.maxlength.requiredLength } }}\n                                </p>\n                                <p *ngIf="settingForm.controls.email.errors.email" class="text-danger">\n                                    {{ \'form.validation.email\' | translate }}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="row align-items-center">\n                        <p class="col-md-4 py-2 text-md-right">{{ \'common.telephone\' | translate }}</p>\n                        <div class="col-md-8">\n                            <input type="tel" class="form-control" formControlName="telephone" placeholder="0362778824">\n                            <div *ngIf="settingForm.controls.telephone.invalid && settingForm.controls.telephone.touched"\n                                class="mt-2">\n                                <p *ngIf="settingForm.controls.telephone.errors.required" class="text-danger">\n                                    {{ \'form.validation.required\' | translate }}</p>\n                                <p *ngIf="settingForm.controls.telephone.errors.minlength" class="text-danger">\n                                    {{ \'form.validation.minlength\' | translate: { value: settingForm.controls.telephone.errors.minlength.requiredLength } }}\n                                </p>\n                                <p *ngIf="settingForm.controls.telephone.errors.maxlength" class="text-danger">\n                                    {{ \'form.validation.minlength\' | translate: { value: settingForm.controls.telephone.errors.maxlength.requiredLength } }}\n                                </p>\n                                <p *ngIf="settingForm.controls.telephone.errors.telephone" class="text-danger">\n                                    {{ \'form.validation.telephone\' | translate }}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="row align-items-center">\n                        <p class="col-md-4 py-2 text-md-right">{{ \'setting.printer\' | translate }}</p>\n                        <div class="col-md-8">\n                            <select class="form-control" formControlName="printerType" (change)="changePrinterType()">\n                                <option value="">{{ \'setting.unselected\' | translate }}</option>\n                                <option *ngFor="let printer of printers" [value]="printer.connectionType">\n                                    {{ printer.name | translate }}</option>\n                            </select>\n                            <button\n                                *ngIf="this.settingForm.controls.printerType.value && this.settingForm.controls.printerType.value !== connectionType.None"\n                                type="button" class="btn btn-sm btn-primary py-2 mt-2"\n                                (click)="print()">{{ \'setting.testPrinting\' | translate }}</button>\n                        </div>\n                    </div>\n                </div>\n                <div class="form-group">\n                    <div class="row align-items-center">\n                        <p class="col-md-4 py-2 text-md-right">{{ \'setting.printerIpAddress\' | translate }}</p>\n                        <div class="col-md-8">\n                            <input type="text" class="form-control" formControlName="printerIpAddress"\n                                placeholder="0.0.0.0">\n                            <div *ngIf="settingForm.controls.printerIpAddress.invalid && settingForm.controls.printerIpAddress.touched"\n                                class="mt-2">\n                                <p *ngIf="settingForm.controls.printerIpAddress.errors.required" class="text-danger">\n                                    {{ \'form.validation.required\' | translate }}</p>\n                            </div>\n                            <p class="text-small mt-2">\n                                {{ \'setting.printerIpAddressDescription\' | translate }}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                \n\n            </div>\n        </div>\n\n        <div class="buttons mx-auto text-center">\n            <button type="submit" [disabled]="isLoading | async" class="btn btn-primary btn-block py-3 mb-3"\n                (click)="onSubmit()">{{ \'setting.next\' | translate }}</button>\n            <button type="button" class="btn btn-link"\n                [routerLink]="environment.BASE_URL">{{ \'setting.prev\' | translate }}</button>\n        </div>\n    </form>\n</div>'},AL2A:function(e,t,n){"use strict";n.r(t);var r=n("An66"),o=n("kZht"),s=n("DSWM"),i=n("3kIJ"),a=n("1VvW"),l=n("ofez"),c=n("aDqW"),m=n("WxsR"),d=n("PIN6"),p=n("i7xV"),u=n("cHUu"),g=n("mOXJ"),v=n("UH/6"),f=function(e,t,n,r){return new(n||(n=Promise))((function(o,s){function i(e){try{l(r.next(e))}catch(t){s(t)}}function a(e){try{l(r.throw(e))}catch(t){s(t)}}function l(e){e.done?o(e.value):new n((function(t){t(e.value)})).then(i,a)}l((r=r.apply(e,t||[])).next())}))},h=function(e){return e&&e.__esModule?e:{default:e}},y=function(){function e(t,n,r,o,s,i,a,l){_classCallCheck(this,e),this.formBuilder=t,this.store=n,this.utilService=r,this.userService=o,this.masterService=s,this.orderService=i,this.translate=a,this.router=l,this.printers=p.j,this.connectionType=p.i,this.viewType=p.h,this.environment=Object(d.a)()}return _createClass(e,[{key:"ngOnInit",value:function(){return f(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.user=this.store.pipe(Object(l.j)(g.i)),this.master=this.store.pipe(Object(l.j)(g.d)),this.error=this.store.pipe(Object(l.j)(g.b)),this.isLoading=this.store.pipe(Object(l.j)(g.c)),this.posList=[],e.prev=1,e.next=4,this.masterService.getSellers();case 4:return e.next=6,this.createSettlingForm();case 6:e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),console.error(e.t0),this.router.navigate(["/error"]);case 11:case"end":return e.stop()}}),e,this,[[1,8]])})))}},{key:"createSettlingForm",value:function(){return f(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.settingForm=this.formBuilder.group({sellerBranchCode:["",[i.f.required]],posId:["",[i.f.required]],familyName:["",[i.f.required,i.f.maxLength(12),i.f.pattern(/^[\u30a1-\u30f6\u30fc]+$/)]],givenName:["",[i.f.required,i.f.maxLength(12),i.f.pattern(/^[\u30a1-\u30f6\u30fc]+$/)]],email:["",[i.f.required,i.f.maxLength(50),i.f.email]],telephone:["",[i.f.required,i.f.maxLength(15),i.f.minLength(9),function(e){var t=e.root.get("telephone");if(null!==t){if(""===t.value)return null;var n=new RegExp(/^\+/).test(t.value)?m.c(t.value):m.c(t.value,"JP");if(void 0===n.phone)return{telephone:!0};if(!m.b(n))return{telephone:!0}}return null}]],printerType:[""],printerIpAddress:[""]}),e.next=3,this.userService.getData();case 3:void 0!==(t=e.sent).seller&&void 0!==t.seller.location&&this.settingForm.controls.sellerBranchCode.setValue(t.seller.location.branchCode),void 0!==t.pos&&(this.changePosList(),this.settingForm.controls.posId.setValue(t.pos.id)),void 0!==t.customerContact&&void 0!==t.customerContact.familyName&&void 0!==t.customerContact.givenName&&void 0!==t.customerContact.email&&void 0!==t.customerContact.telephone&&(this.settingForm.controls.familyName.setValue(t.customerContact.familyName),this.settingForm.controls.givenName.setValue(t.customerContact.givenName),this.settingForm.controls.email.setValue(t.customerContact.email),this.settingForm.controls.telephone.setValue((new v.a).transform(t.customerContact.telephone))),void 0!==t.printer&&(this.settingForm.controls.printerType.setValue(t.printer.connectionType),this.settingForm.controls.printerIpAddress.setValue(t.printer.ipAddress));case 5:case"end":return e.stop()}}),e,this)})))}},{key:"changePosList",value:function(){var e=this;this.settingForm.controls.posId.setValue("");var t=this.settingForm.controls.sellerBranchCode.value;""!==t?this.master.subscribe((function(n){var r=n.sellers.find((function(e){return void 0!==e.location&&e.location.branchCode===t}));e.posList=void 0!==r?void 0===r.hasPOS?[]:r.hasPOS:[]})).unsubscribe():this.posList=[]}},{key:"onSubmit",value:function(){var e=this;Object.keys(this.settingForm.controls).forEach((function(t){e.settingForm.controls[t].markAsTouched()})),this.settingForm.invalid?this.utilService.openAlert({title:this.translate.instant("common.error"),body:this.translate.instant("setting.alert.validation")}):this.master.subscribe((function(t){var n=t.sellers.find((function(t){return void 0!==t.location&&t.location.branchCode===e.settingForm.controls.sellerBranchCode.value}));if(void 0!==n&&void 0!==n.hasPOS){var r=n.hasPOS.find((function(t){return t.id===e.settingForm.controls.posId.value}));void 0!==r&&(e.userService.updateAll({seller:n,pos:r,customerContact:{familyName:e.settingForm.controls.familyName.value,givenName:e.settingForm.controls.givenName.value,email:e.settingForm.controls.email.value,telephone:e.settingForm.controls.telephone.value},printer:{ipAddress:e.settingForm.controls.printerIpAddress.value,connectionType:e.settingForm.controls.printerType.value}}),e.utilService.openAlert({title:e.translate.instant("common.complete"),body:e.translate.instant("setting.alert.success")}))}})).unsubscribe()}},{key:"print",value:function(){return f(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t={connectionType:this.settingForm.controls.printerType.value,ipAddress:this.settingForm.controls.printerIpAddress.value},e.prev=1,e.next=4,this.orderService.print({orders:[],printer:t});case 4:e.next=9;break;case 6:e.prev=6,e.t0=e.catch(1),console.error(e.t0),this.utilService.openAlert({title:this.translate.instant("common.error"),body:'\n                <p class="mb-4">'.concat(this.translate.instant("setting.alert.print"),'</p>\n                    <div class="p-3 bg-light-gray select-text">\n                    <code>').concat(e.t0,"</code>\n                </div>")});case 9:case"end":return e.stop()}}),e,this,[[1,6]])})))}},{key:"changePrinterType",value:function(){this.settingForm.controls.printerType.value===p.i.StarBluetooth&&this.settingForm.controls.printerIpAddress.setValue(this.translate.instant("setting.starBluetoothAddress"))}}]),e}();y.ctorParameters=function(){return[{type:i.a},{type:l.b},{type:u.k},{type:u.j},{type:u.d},{type:u.e},{type:c.c},{type:a.b}]},y=function(e,t,n,r){var o,s=arguments.length,i=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i}([Object(o.n)({selector:"app-setting",template:h(n("744H")).default,styles:[h(n("uSBn")).default]}),function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}("design:paramtypes",[i.a,l.b,u.k,u.j,u.d,u.e,c.c,a.b])],y);var b=[{path:"",component:n("RRjC").a,children:[{path:"",component:y}]}],F=function e(){_classCallCheck(this,e)};F=function(e,t,n,r){var o,s=arguments.length,i=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i}([Object(o.I)({imports:[a.c.forChild(b)],exports:[a.c]})],F),n.d(t,"SettingModule",(function(){return x}));var x=function e(){_classCallCheck(this,e)};x=function(e,t,n,r){var o,s=arguments.length,i=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(i=(s<3?o(i):s>3?o(t,n,i):o(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i}([Object(o.I)({declarations:[y],imports:[r.b,F,s.a]})],x)},uSBn:function(e,t,n){"use strict";n.r(t),t.default=""}}]);